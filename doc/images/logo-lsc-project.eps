%!PS-Adobe-3.1 EPSF-3.0
%%BoundingBox: 0 0 300 76
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%%DocumentNeededResources
%%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)
%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.13 0)
%%+ procset Adobe_CoolType_Core (2.11 0)
%%+ procset Adobe_AGM_Core (2.0 0)
%%+ procset Adobe_AGM_Utils (1.0 0)
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndData
%%EndComments
%%BeginDefaults
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2000 Adobe Systems, Inc.  All Rights Reserved.
%%HighResBoundingBox: 0 0 300 76
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Utils 35 dict dup begin put
/bdf
{
	bind def
} bind def
/nd{
	null def
}bdf
/xdf
{
	exch def
}bdf
/ldf 
{
	load def
}bdf
/ddf
{
	put
}bdf	
/xddf
{
	3 -1 roll put
}bdf	
/xpt
{
	exch put
}bdf
/ndf
{ 
	
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/bdict
{
	mark
}bdf
/edict
{
	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
}def
	
/ps_level
	/languagelevel where{
		pop languagelevel
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/makereadonlyarray
{
	/packedarray where{
		pop packedarray
	}{
		array astore readonly
	}ifelse
}bdf
/map_reserved_ink_name
{
	dup type /stringtype eq{
		dup /Red eq{
			pop (_Red_)
		}{
			dup /Green eq{
				pop (_Green_)
			}{
				dup /Blue eq{
					pop (_Blue_)
				}{
					dup /Cyan eq{
						pop (_Cyan_)
					}{
						dup /Magenta eq{
							pop (_Magenta_)
						}{
							dup /Yellow eq{
								pop (_Yellow_)
							}{
								dup /Black eq{
									pop (_Black_)
								}{
									dup () cvn eq{
										pop (Process)
									}if
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf
		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	
	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne
			{
			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark
			} if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		} ifelse
	
	AGMUTIL_GSTATE_flt setflat
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/rdline
{
	currentfile AGMUTIL_str256 readline pop
} bdf
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%) anchorsearch {pop} if
} bdf
/filter_cmyk
{	
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length /AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} bdf
/AGMUTIL_imagefile nd
/AGMUTIL_imbuf nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	dup /DataSource {AGMUTIL_imagefile AGMUTIL_imbuf readstring pop} put
	exch
	load exec
}def
/write_image_file
{
	begin
	{ (AGMUTIL_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		Adobe_AGM_Utils/AGMUTIL_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf
		1 1 Height { 
			pop
			DataSource dup type /filetype eq{
				AGMUTIL_imbuf readstring pop
			}{
				exec
			} ifelse
			AGMUTIL_imagefile exch writestring
		}for
		true
	}ifelse
	end
}def
/close_image_file
{
	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile
}def
/consumeimagedata
{
	begin
	currentdict /MultipleDataSources known not
		{/MultipleDataSources false def} if
	MultipleDataSources
		{
		1 dict begin
		/flushbuffer Width string def
		1 1 Height
			{
			pop
			0 1 DataSource length 1 sub
				{
				DataSource exch get
				dup type dup 
				/filetype eq
					{
					exch flushbuffer readstring pop pop
					}if
				/arraytype eq
					{
					exec pop
					}if
				}for
			}for
		end
		}
		{
		/DataSource load type dup 
		/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 div mul cvi string def
			1 1 Height { pop DataSource flushbuffer readstring pop pop} for
			end
			}if
		/arraytype eq
			{
			1 1 Height { pop DataSource pop } for
			}if
		}ifelse
	end
}bdf
/addprocs
{
     2{/exec load}repeat
     3 1 roll
     [ 5 1 roll ] bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
    currentdict 2 index known{
    	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
	    addprocs /TransferFunction xdf 
	    currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/doc_setup{
	Adobe_AGM_Utils begin
}bdf
/doc_trailer{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-1999 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 206 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_src256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_arg1 nd
/AGMCORE_arg2 nd
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_will_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 3 dict def
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/knockout_unitsq nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer {readline} stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq{
		dup /HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup /HalftoneType get 2 eq{
				/GraySpotFunction get
			}{ 
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/stkpath_clp_npth
{
	strokepath clip newpath
} def
/stk_n_clp_npth
{
	gsave stroke grestore clip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	Adobe_AGM_Core/spot_alias get exec
	/Adobe_AGM_Image where {
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			get exec
		}{
			pop pop
		}ifelse
	} if
	100 dict begin
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
			
	/AGMCORE_arg2 xdf
	/AGMCORE_arg1 xdf
	
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
		
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			dup (.) ne AGMCORE_arg1 0 lt and
				{
				pop
				}
				{
				stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
					{
					currentpoint AGMCORE_deltaY sub exch pop
					clippath pathbbox pop pop pop 44 add exch moveto
					} if
				AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
				} ifelse
			
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
			dup 94 eq 
				{
				pop
				AGMCORE_arg1 0 ge
					{
					AGMCORE_arg1 AGMCORE_str256 cvs
					dup /AGMCORE_tmp exch length def
					AGMCORE_str256 exch 0 exch putinterval
					AGMCORE_str256 0 AGMCORE_tmp getinterval
					stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
						{
						currentpoint AGMCORE_deltaY sub exch pop
						clippath pathbbox pop pop pop 44 add exch moveto
						} if
					AGMCORE_str256 0 AGMCORE_tmp getinterval show
					}
					{
					/AGMCORE_arg1 0 def
					} ifelse
				0 1 AGMCORE_str256 length 1 sub
					{
					AGMCORE_str256 exch 0 put
					}for
				/AGMCORE_tmp 0 def
				AGMCORE_arg1 0 ne
					{
					/AGMCORE_arg1 AGMCORE_arg2 def
					} if
				}
				{
				AGMCORE_str256 exch AGMCORE_tmp exch put
				/AGMCORE_tmp AGMCORE_tmp 1 add def
				}ifelse
			} ifelse
		} forall
} bdf
/doc_setup{
	Adobe_AGM_Core begin
	
	/AGMCORE_will_host_separate xdf
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	
	errordict /AGM_handleerror known not{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror {
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and{
				$error /newerror false put
				AGMCORE_cur_err /AGMCORE_bad_environ eq{
					/AGMCORE_bad_environ AGMCORE_ps_level AGMCORE_ps_version
				}{
					AGMCORE_cur_err 0 0
				}ifelse
				compose_error_msg
			}if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 8 def
											
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	end
}def
/page_setup
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/LeaveColorUnchanged eq
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where {pop}{
		/convert_spot_to_process
		{
			AGMCORE_host_sep
			{ 
				gsave
				1 0 0 0 setcmykcolor currentgray 1 exch sub
				0 1 0 0 setcmykcolor currentgray 1 exch sub
				0 0 1 0 setcmykcolor currentgray 1 exch sub
				0 0 0 1 setcmykcolor currentgray 1 exch sub
				add add add 0 eq
				{
					pop false
				}{
					false setoverprint
					1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor
					currentgray 0 eq
				}ifelse
				grestore
			}{
				AGMCORE_distilling
				{
					pop
					AGM_is_distiller_preserving_spotimages not
				}{
					Adobe_AGM_Core/AGMCORE_name xddf
					false
					currentpagedevice/OverrideSeparations known
						{
						currentpagedevice/OverrideSeparations get
							{
							/HqnSpots /ProcSet resourcestatus
								{
								pop pop pop true
								}if
							}if
						}if					
						{
						AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not
						}{
						gsave
						[/Separation AGMCORE_name /DeviceGray {}]setcolorspace
						false
						currentpagedevice/SeparationColorNames 2 copy known
						{
							get
							{
							AGMCORE_name eq or
							}forall
						not
						}{
							pop pop
						}ifelse
						grestore
						}ifelse
				}ifelse
			}ifelse
		}def
	}ifelse
	/convert_to_process where {pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
				true exch
					{
					convert_spot_to_process and
					}
				forall
				}{
				false exch
					{
					convert_spot_to_process or
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	AGMCORE_host_sep AGMCORE_will_host_separate not and {
		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def
		AGMCORE_color_space_onhost_seps
	}if
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
		/clip AGMCORE_key_known not{
			Adobe_AGM_Core/AGMCORE_&clip /clip load put
			/clip
			{
				current_spot_alias{
					currentdict/InksUsed known{
						[
						InksUsed{
							dup map_alias{
								/Name get exch pop
							}if
						}forall
						]
						/InksUsed xdf
					}if
				}if
				AGMCORE_&clip
			}def
		}if
		/eoclip AGMCORE_key_known not{
			Adobe_AGM_Core/AGMCORE_&eoclip /eoclip load put
			/eoclip
			{
				current_spot_alias{
					currentdict/InksUsed known{
						[
						InksUsed{
							dup map_alias{
								/Name get exch pop
							}if
						}forall
						]
						/InksUsed xdf
					}if
				}if
				AGMCORE_&eoclip
			}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	}def
	
	level2{
		/mo /moveto ldf
		/li /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		level2 /setcolorspace AGMCORE_key_known not and{
		
			/AGMCORE_&&&setcolorspace /setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get dup /Separation eq
					{
						pop
						dup length array copy
						dup dup 1 get
						current_spot_alias
						{
							dup map_alias
							{
								begin
								/sep_colorspace_dict currentdict AGMCORE_gput
								pop pop	pop
									
								[ 
									/Separation Name 
									CSA map_csa
									dup /MappedCSA xdf 
									/sep_colorspace_proc load
								]
								dup Name
								end
							}if
						}if
						map_reserved_ink_name 1 exch put
					}{
						/DeviceN eq 
						{
							dup length array copy
							dup dup 1 get [ 
								exch {
									current_spot_alias{
										dup map_alias{
											/Name get exch pop
										}if
									}if
									map_reserved_ink_name
								} forall 
							] 1 exch put
						}if
					}ifelse
				}if
			}def
			/setcolorspace
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get /Indexed eq
					{
						aload pop 3 -1 roll
						AGMCORE_ReplaceMappedColor
						3 1 roll 4 array astore
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				AGMCORE_&&&setcolorspace
			}def
		}if	
	}{
		
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		
		/n_color_components
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop 1
			}{
				/DeviceCMYK eq{
					4
				}{
					3
				}ifelse
			}ifelse
		} def
		
		/setcolor_devicecolor
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
	
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	
	/sop /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/spclp /stkpath_clp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/s /stroke ldf
	/sclp /stk_n_clp_npth ldf
	/nclp /npth_clp ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	/setcmykcolor /cmyk ldf
	
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/current_ink
{
	dup length 0 eq{
		pop true
	}{
		Adobe_AGM_Core/ink_result false put
		{
			dup /ProcessCyan eq{
				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf
			}{
				dup /ProcessMagenta eq{
					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf
				}{
					dup /ProcessYellow eq{
						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf
					}{
						dup /ProcessBlack eq{
							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf
						}{
							dup /sep_colorspace_dict AGMCORE_gget dup null eq{
								pop false ink_result or Adobe_AGM_Core/ink_result xddf
							}{
								/Name get eq{
									1 setsepcolor
									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf
								}{
									false ink_result or Adobe_AGM_Core/ink_result xddf
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			pop 
		} forall
		ink_result
	}ifelse
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{ 
	
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
							}{
								Name inRip_spot_has_ink not
							}ifelse
							{
		 						/pop cvx 1
							}if
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc /setcolor ldf
						
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		/MappedCSA CSA map_csa def
		AGMCORE_host_sep level2 not and{
			0 0 0 0 setcmykcolor
		}{
			[/Indexed MappedCSA 
			level2 not has_color not and{
				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
					pop [/DeviceGray]
				}if
				HiVal GrayLookup
			}{
				HiVal 
				currentdict/RangeArray known{
					{ 
						/indexed_colorspace_dict AGMCORE_gget begin
						Lookup exch 
						dup HiVal gt{
							pop HiVal
						}if
						NComponents mul NComponents getinterval {} forall
						NComponents 1 sub -1 0{
							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
							NComponents 1 roll
						}for
						end
					} bind
				}{
					Lookup
				}ifelse
			}ifelse
			] setcolorspace_opt
			
			set_crd
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor
	}{
		setcolor
	}ifelse
} def
/ignoreimagedata
{
	currentoverprint not{
		gsave 
		dup begin
		1 setgray
		0 0 ImageMatrix itransform 
		Width Height ImageMatrix idtransform rectfill 
		end
		grestore
		}if
	consumeimagedata
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/cachepattern_level2
{
	4 dict begin
	/comparebuffer exch def
	/holdbuffer exch def
	/readbuffer 1024 string def
	/LZWFilter holdbuffer /LZWEncode filter def
	{
		currentfile readbuffer readline not
			{pop exit}
		if
		dup LZWFilter exch writestring
		LZWFilter (\n) writestring
		comparebuffer eq
			{exit}
		if
	}loop
	LZWFilter closefile
	end
}def
/cachepattern_level3
{
	3 dict begin
	/comparebuffer exch def
	/readbuffer 1024 string def
	/DoEOL false def
	{ 
		DoEOL
			{
			(\n)
			/DoEOL false def
			}
			{
			currentfile readbuffer readline not
				{pop ()}
				{
				dup length 0 eq
					{ pop(\n)}
					{
					dup comparebuffer eq
						{pop ()}
						{/DoEOL true def}
					ifelse
					}
				ifelse
				}
			ifelse
			}
		ifelse
	} /ReusableStreamDecode filter
	end
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
	}if
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			false sop [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	
	Intent ne{
		false  
		Intent
		AGMCORE_CRD_cache {
			exch pop 
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end 
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp) flushinput
	}if
}def
/cpaint_gsep
{
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep) flushinput
	}if
}def
/cpaint_gend
{
	newpath
}def
/AGMCORE_ctm_stack bdict
	/push_ctm {
		stack length size le{
			stack dup length 2 mul array 
			dup /stack exch def
			copy pop
		}if
		stack size 3 -1 roll put
		/size size 1 add def
	}
	/pop_ctm {
		/size size 1 sub def
		size 0 lt{ 
			/size 0 def
		}if
		stack size get
	}
	/stack 1 array
	/size 0 
edict 
def
/save_ctm
{
	matrix currentmatrix AGMCORE_ctm_stack begin 
		push_ctm 
	end
}def
/restore_ctm
{
	AGMCORE_ctm_stack begin
		pop_ctm 
	end
	setmatrix
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div 
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
/rdcmntline {
	currentfile AGMCORE_str256 readline pop
	(%) anchorsearch {pop} if
} def
/set_spot_alias_ary
{
	/AGMCORE_SpotAliasAry where{
		pop pop
	}{
		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
		true set_spot_alias
	}ifelse
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry{
				dup/Name get AGMCORE_name eq{
					save exch
					/Adobe_AGM_Core currentdict def
					/CSD get get_csd
					exch restore
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	
	/AGMCORE_&setcustomcolor AGMCORE_key_known not {
		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put
	} if
	/customcolor_tint 1 AGMCORE_gput
	
	Adobe_AGM_Core begin
	/setcustomcolor
	{
		
		dup /customcolor_tint exch AGMCORE_gput
		
		current_spot_alias{
			1 index 4 get map_alias{
				mark 3 1 roll
				setsepcolorspace
				counttomark 0 ne{
					setsepcolor
				}if
				pop
				pop
			}{
				AGMCORE_&setcustomcolor
			}ifelse
		}{
			AGMCORE_&setcustomcolor
		}ifelse
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd /setpagedevice load def
	/setpagedevice { get_gstate spd set_gstate } def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known{
			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<< /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get >> setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 
		fill grestore
	}if
	end
}def
/lw_save_restore_override {
	/md where {
		pop
		md /pmSVsetup{} put
		md /endp{}put
		md /pse{}put
		md /psb{}put
	}if
}def
/driver_media_override
{
	/md where {
		pop
		md /initializepage known {
			md /initializepage {} put
		} if
		md /rC known {
			md /rC {4{pop}repeat} put
		} if
	}if
	
	/mysetup where {
		/mysetup [1 0 0 1 0 0] put
	}if 
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def
	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def
	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.11 0
%%Copyright: Copyright 1997-2001 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 2.11 0
userdict/Adobe_CoolType_Core 60 dict dup begin put/Level2? systemdict
/languagelevel known dup{pop systemdict/languagelevel get 2 ge}if def Level2?
not{/currentglobal false def/setglobal/pop load def/gcheck{pop false}bind def
/currentpacking false def/setpacking/pop load def/SharedFontDirectory 0 dict
def}if currentpacking true setpacking/doc_setup{Adobe_CoolType_Core begin/mov
/moveto load def/nfnt/newencodedfont load def/mfnt/makefont load def/sfnt
/setfont load def/ufnt/undefinefont load def/chp/charpath load def/awsh
/awidthshow load def/wsh/widthshow load def/ash/ashow load def/sh/show load
def end userdict/Adobe_CoolType_Data 6 dict dup begin/AddWidths? false def/CC
0 def/charcode 2 string def end put}bind def/doc_trailer{currentdict
Adobe_CoolType_Core eq{end}if}bind def/page_setup{Adobe_CoolType_Core begin}
bind def/page_trailer{end}bind def/unload{systemdict/languagelevel known{
systemdict/languagelevel get 2 ge{userdict/Adobe_CoolType_Core 2 copy known{
undef}{pop pop}ifelse}if}if}bind def/ndf{1 index where{pop pop pop}{dup xcheck
{bind}if def}ifelse}def/findfont dup systemdict begin userdict begin
/globaldict where{/globaldict get begin}if dup where pop exch get/globaldict
where{pop end}if end end def/systemfindfont/findfont load def/undefinefont{pop
}ndf/copyfont{currentglobal 3 1 roll 1 index gcheck setglobal dup null eq{0}{
dup length}ifelse 2 index length add 1 add dict begin exch{1 index/FID eq{pop
pop}{def}ifelse}forall dup null eq{pop}{{def}forall}ifelse currentdict end
exch setglobal}bind def/copyarray{currentglobal exch dup gcheck setglobal dup
length array copy exch setglobal}bind def/newencodedfont{currentglobal{
SharedFontDirectory 3 index known{SharedFontDirectory 3 index get
/FontReferenced known}{false}ifelse}{FontDirectory 3 index known{FontDirectory
3 index get/FontReferenced known}{SharedFontDirectory 3 index known{
SharedFontDirectory 3 index get/FontReferenced known}{false}ifelse}ifelse}
ifelse dup{3 index findfont/FontReferenced get 2 index findfont ne{pop false}
if}if{pop 1 index findfont/Encoding get exch 0 1 255{2 copy get 3 index 3 1
roll put}for pop pop pop}{findfont dup dup maxlength 2 add dict begin exch{1
index/FID ne{def}{pop pop}ifelse}forall/FontReferenced exch def/Encoding exch
dup length array copy def/FontName 1 index dup type/stringtype eq{cvn}if def
currentdict end definefont pop}ifelse}bind def/SetSubstituteStrategy{
$SubstituteFont begin dup type/dicttype ne{0 dict}if currentdict/$Strategies
known{exch $Strategies exch 2 copy known{get 2 copy maxlength exch maxlength
add dict begin{def}forall{def}forall currentdict dup/$Init known{dup/$Init get
exec}if end/$Strategy exch def}{pop pop pop}ifelse}{pop pop}ifelse end}bind
def/scff{$SubstituteFont begin dup type/stringtype eq{dup length exch}{null}
ifelse/$sname exch def/$slen exch def end findfont $SubstituteFont begin
/$sname null def/$slen 0 def end}bind def/isWidthsOnlyFont{dup/WidthsOnly
known{pop pop true}{dup/FDepVector known{/FDepVector get{isWidthsOnlyFont dup{
exit}if}forall}{dup/FDArray known{/FDArray get{isWidthsOnlyFont dup{exit}if}
forall}{pop}ifelse}ifelse}ifelse}bind def/?set{$SubstituteFont begin
/$substituteFound false def/$fontname 4 index def/$doSmartSub false def end 3
index findfont $SubstituteFont begin $substituteFound{false}{dup/FontName
known{dup/FontName get $fontname eq 1 index/DistillerFauxFont known not and
/currentdistillerparams where{pop false 2 index isWidthsOnlyFont not and}if}{
false}ifelse}ifelse exch pop/$doSmartSub true def end{exch pop exch pop exch 2
dict dup/Found 3 index put exch findfont exch}{exch exec exch findfont 2 dict
dup/Downloaded 6 5 roll put}ifelse dup/FontName 4 index put copyfont
definefont pop}bind def/?str1 256 string def/?str2 256 string def/?add{1 index
type/integertype eq{exch true 4 2}{false 3 1}ifelse roll 1 index findfont dup
/Widths known{Adobe_CoolType_Data/AddWidths? true put gsave dup 1000 scalefont
setfont}if/Downloaded known{exec exch{exch ?str2 cvs exch findfont/Downloaded
get 1 dict begin/Downloaded 1 index def ?str1 cvs length ?str1 1 index 1 add 3
index putinterval exch length 1 add 1 index add ?str1 2 index(*)putinterval
?str1 0 2 index getinterval cvn findfont ?str1 3 index(+)putinterval 2 dict
dup/FontName ?str1 0 6 index getinterval cvn put dup/Downloaded Downloaded put
end copyfont dup/FontName get exch definefont pop pop pop}{pop}ifelse}{pop
exch{findfont dup/Found get dup length exch ?str1 cvs pop ?str1 1 index(+)
putinterval ?str1 1 index 1 add 4 index ?str2 cvs putinterval ?str1 exch 0
exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn 1 dict exch 1 index
exch/FontName exch put copyfont dup/FontName get exch definefont pop}{pop}
ifelse}ifelse Adobe_CoolType_Data/AddWidths? get{grestore Adobe_CoolType_Data
/AddWidths? false put}if}bind def/?sh{currentfont/Downloaded known{exch}if pop
}bind def/?chp{currentfont/Downloaded known{pop}{false chp}ifelse}bind def/?mv
{currentfont/Downloaded known{moveto pop pop}{pop pop moveto}ifelse}bind def
setpacking userdict/$SubstituteFont 25 dict put 1 dict begin/SubstituteFont
dup $error exch 2 copy known{get}{pop pop{pop/Courier}bind}ifelse def
/currentdistillerparams where dup{pop pop currentdistillerparams
/CannotEmbedFontPolicy 2 copy known{get/Error eq}{pop pop false}ifelse}if not{
countdictstack array dictstack 0 get begin userdict begin $SubstituteFont
begin/$str 128 string def/$fontpat 128 string def/$slen 0 def/$sname null def
/$match false def/$fontname null def/$substituteFound false def/$doSmartSub
true def/$depth 0 def/$fontname null def/$italicangle 26.5 def/$dstack null
def/$Strategies 10 dict dup begin/$Type3Underprint{currentglobal exch false
setglobal 11 dict begin/UseFont exch $WMode 0 ne{dup length dict copy dup
/WMode $WMode put/UseFont exch definefont}if def/FontName $fontname dup type
/stringtype eq{cvn}if def/FontType 3 def/FontMatrix[.001 0 0 .001 0 0]def
/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def/FontBBox[0 0 0 0]
def/CCInfo 7 dict dup begin/cc null def/x 0 def/y 0 def end def/BuildChar{exch
begin CCInfo begin 1 string dup 0 3 index put exch pop/cc exch def UseFont
1000 scalefont setfont cc stringwidth/y exch def/x exch def x y setcharwidth
$SubstituteFont/$Strategy get/$Underprint get exec 0 0 moveto cc show x y
moveto end end}bind def currentdict end exch setglobal}bind def/$GetaTint 2
dict dup begin/$BuildFont{dup/WMode known{dup/WMode get}{0}ifelse/$WMode exch
def $fontname exch dup/FontName known{dup/FontName get dup type/stringtype eq{
cvn}if}{/unnamedfont}ifelse exch $deepcopyfont exch 1 index exch/FontBasedOn
exch put dup/FontName $fontname dup type/stringtype eq{cvn}if put definefont}
bind def/$Underprint{gsave x abs y abs gt{/y 1000 def}{/x -1000 def 500 120
translate}ifelse Level2?{[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
setcolorspace}{0 setgray}ifelse 10 setlinewidth x .8 mul[7 3]{y mul 8 div 120
sub x 10 div exch moveto 0 y 4 div neg rlineto dup 0 rlineto 0 y 4 div rlineto
closepath gsave Level2?{.2 setcolor}{.8 setgray}ifelse fill grestore stroke}
forall pop grestore}bind def end def/$Oblique 1 dict dup begin/$BuildFont{
currentglobal exch dup gcheck setglobal null copyfont begin/FontBasedOn
currentdict/FontName known{FontName dup type/stringtype eq{cvn}if}{
/unnamedfont}ifelse def/FontName $fontname dup type/stringtype eq{cvn}if def
/currentdistillerparams where{pop}{/FontInfo currentdict/FontInfo known{
FontInfo null copyfont}{2 dict}ifelse dup begin/ItalicAngle $italicangle def
/FontMatrix FontMatrix[1 0 ItalicAngle dup sin exch cos div 1 0 0]matrix
concatmatrix readonly end 4 2 roll def def}ifelse FontName currentdict end
definefont exch setglobal}bind def end def/$None 1 dict dup begin/$BuildFont{}
bind def end def end def/$Oblique SetSubstituteStrategy/$findfontByEnum{dup
type/stringtype eq{cvn}if dup/$fontname exch def $sname null eq{$str cvs dup
length $slen sub $slen getinterval}{pop $sname}ifelse $fontpat dup 0(fonts/*)
putinterval exch 7 exch putinterval/$match false def $SubstituteFont/$dstack
countdictstack array dictstack put mark{$fontpat 0 $slen 7 add getinterval{
/$match exch def exit}$str filenameforall}stopped{cleardictstack currentdict
true $SubstituteFont/$dstack get{exch{1 index eq{pop false}{true}ifelse}{begin
false}ifelse}forall pop}if cleartomark/$slen 0 def $match false ne{$match
(fonts/)anchorsearch pop pop cvn}{/Courier}ifelse}bind def/$ROS 1 dict dup
begin/Adobe 4 dict dup begin/Japan1[/Ryumin-Light/HeiseiMin-W3
/GothicBBB-Medium/HeiseiKakuGo-W5/HeiseiMaruGo-W4/Jun101-Light]def/Korea1[
/HYSMyeongJo-Medium/HYGoThic-Medium]def/GB1[/STSong-Light/STHeiti-Regular]def
/CNS1[/MKai-Medium/MHei-Medium]def end def end def/$cmapname null def
/$deepcopyfont{dup/FontType get 0 eq{1 dict dup/FontName/copied put copyfont
begin/FDepVector FDepVector copyarray 0 1 2 index length 1 sub{2 copy get
$deepcopyfont dup/FontName/copied put/copied exch definefont 3 copy put pop
pop}for def currentdict end}{$Strategies/$Type3Underprint get exec}ifelse}bind
def/$buildfontname{length $str 1 index(-)putinterval 1 add $str 1 index
$cmapname $fontpat cvs putinterval $cmapname length add $str exch 0 exch
getinterval cvn}bind def/$findfontByROS{/$fontname exch def $ROS Registry 2
copy known{get Ordering 2 copy known{get}{pop pop[]}ifelse}{pop pop[]}ifelse
false exch{dup/CIDFont resourcestatus{pop pop save 1 index/CIDFont
findresource dup/WidthsOnly known{dup/WidthsOnly get}{false}ifelse exch pop
exch restore{pop}{exch pop true exit}ifelse}{pop}ifelse}forall{$str cvs
$buildfontname}{false(*){save exch dup/CIDFont findresource dup/WidthsOnly
known{dup/WidthsOnly get not}{true}ifelse exch/CIDSystemInfo get dup/Registry
get Registry eq exch/Ordering get Ordering eq and and{exch restore exch pop
true exit}{pop restore}ifelse}$str/CIDFont resourceforall{$buildfontname}{
$fontname $findfontByEnum}ifelse}ifelse}bind def end end currentdict/$error
known currentdict/languagelevel known and dup{pop $error/SubstituteFont known}
if dup{$error}{Adobe_CoolType_Core}ifelse begin{/SubstituteFont/CMap/Category
resourcestatus{pop pop{$SubstituteFont begin/$substituteFound true def dup
length $slen gt $sname null ne or $slen 0 gt and{$sname null eq{dup $str cvs
dup length $slen sub $slen getinterval cvn}{$sname}ifelse dup/CMap
resourcestatus{pop pop dup/$cmapname exch def/CMap findresource/CIDSystemInfo
get{def}forall $findfontByROS}{128 string cvs dup(-)search{3 1 roll search{3 1
roll pop{dup cvi}stopped{pop pop pop pop pop $findfontByEnum}{4 2 roll pop pop
exch length exch 2 index length 2 index sub exch 1 sub -1 0{$str cvs dup
length 4 index 0 4 index 4 3 roll add getinterval exch 1 index exch 3 index
exch putinterval dup/CMap resourcestatus{pop pop 4 1 roll pop pop pop dup
/$cmapname exch def/CMap findresource/CIDSystemInfo get{def}forall
$findfontByROS true exit}{pop}ifelse}for dup type/booleantype eq{pop}{pop pop
$findfontByEnum}ifelse}ifelse}{pop pop pop $findfontByEnum}ifelse}{pop pop
$findfontByEnum}ifelse}ifelse}{//SubstituteFont exec}ifelse/$slen 0 def end}}{
{$SubstituteFont begin/$substituteFound true def dup length $slen gt $sname
null ne or $slen 0 gt and{$findfontByEnum}{//SubstituteFont exec}ifelse end}}
ifelse bind readonly def Adobe_CoolType_Core/scfindfont/systemfindfont load
put}{/scfindfont{$SubstituteFont begin dup systemfindfont dup/FontName known{
dup/FontName get dup 3 index ne}{/noname true}ifelse dup{/$origfontnamefound 2
index def/$origfontname 4 index def/$substituteFound true def}if exch pop{
$slen 0 gt $sname null ne 3 index length $slen gt or and{pop dup
$findfontByEnum findfont dup maxlength 1 add dict begin{1 index/FID eq{pop pop
}{def}ifelse}forall currentdict end definefont dup/FontName known{dup/FontName
get}{null}ifelse $origfontnamefound ne{$origfontname $str cvs print
( substitution revised, using )print dup/FontName known{dup/FontName get}{
(unspecified font)}ifelse $str cvs print(.
)print}if}{exch pop}ifelse}{exch pop}ifelse end}bind def}ifelse end end
Adobe_CoolType_Core/findfont{$SubstituteFont begin $depth 0 eq{/$fontname 1
index dup type/stringtype ne{$str cvs}if def/$substituteFound false def}if
/$depth $depth 1 add def end scfindfont $SubstituteFont begin/$depth $depth 1
sub def $substituteFound $depth 0 eq and $doSmartSub and{currentdict/$Strategy
known{$Strategy/$BuildFont get exec}if}if end}bind put}if end end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.13 0
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated.
%%Version: 1.13 0
systemdict/languagelevel known dup{currentglobal false setglobal}{false}ifelse
exch userdict/Adobe_CoolType_Utility 2 copy known{2 copy get dup maxlength 25
add dict copy}{25 dict}ifelse put Adobe_CoolType_Utility begin/ct_Level2? exch
def/ct_Clone? 1183615869 internaldict dup/CCRun known not exch/eCCRun known
not ct_Level2? and or def/ct_UseNativeCapability? systemdict/composefont known
def/ct_MakeOCF 35 dict def/ct_Vars 25 dict def/ct_GlyphDirProcs 6 dict def
/ct_BuildCharDict 15 dict dup begin/charcode 2 string def/dst_string 1500
string def/nullstring()def/usewidths? true def end def ct_Level2?{setglobal}{
pop}ifelse ct_GlyphDirProcs begin/GetGlyphDirectory{systemdict/languagelevel
known{pop/CIDFont findresource/GlyphDirectory get}{1 index/CIDFont
findresource/GlyphDirectory get dup type/dicttype eq{dup dup maxlength exch
length sub 2 index lt{dup length 2 index add dict copy 2 index/CIDFont
findresource/GlyphDirectory 2 index put}if}if exch pop exch pop}ifelse +}def/+
{systemdict/languagelevel known{currentglobal false setglobal 3 dict begin/vm
exch def}{1 dict begin}ifelse/$ exch def systemdict/languagelevel known{vm
setglobal/gvm currentglobal def $ gcheck setglobal}if ?{$ begin}if}def/?{$
type/dicttype eq}def/|{userdict/Adobe_CoolType_Data known{Adobe_CoolType_Data
/AddWidths? known{currentdict Adobe_CoolType_Data begin begin AddWidths?{
Adobe_CoolType_Data/CC 3 index put ?{def}{$ 3 1 roll put}ifelse CC charcode
exch 1 index 0 2 index 256 idiv put 1 index exch 1 exch 256 mod put
stringwidth 2 array astore currentfont/Widths get exch CC exch put}{?{def}{$ 3
1 roll put}ifelse}ifelse end end}{?{def}{$ 3 1 roll put}ifelse}ifelse}{?{def}{
$ 3 1 roll put}ifelse}ifelse}def/!{?{end}if systemdict/languagelevel known{gvm
setglobal}if end}def/:{string currentfile exch readstring pop}executeonly def
end ct_MakeOCF begin/ct_cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09
/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C
/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F
/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42
/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55
/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68
/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B
/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E
/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1
/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4
/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7
/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA
/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED
/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_CID_STR_SIZE 8000 def/ct_mkocfStr100 100 string def/ct_defaultFontMtx[.001
0 0 .001 0 0]def/ct_1000Mtx[1000 0 0 1000 0 0]def/ct_raise{exch cvx exch
errordict exch get exec stop}bind def/ct_reraise{cvx $error/errorname get
(Error: )print dup(                    )cvs print errordict exch get exec stop
}bind def/ct_cvnsi{1 index add 1 sub 1 exch 0 4 1 roll{2 index exch get exch 8
bitshift add}for exch pop}bind def/ct_GetInterval{Adobe_CoolType_Utility
/ct_BuildCharDict get begin/dst_index 0 def dup dst_string length gt{dup
string/dst_string exch def}if 1 index ct_CID_STR_SIZE idiv/arrayIndex exch def
2 index arrayIndex get 2 index arrayIndex ct_CID_STR_SIZE mul sub{dup 3 index
add 2 index length le{2 index getinterval dst_string dst_index 2 index
putinterval length dst_index add/dst_index exch def exit}{1 index length 1
index sub dup 4 1 roll getinterval dst_string dst_index 2 index putinterval
pop dup dst_index add/dst_index exch def sub/arrayIndex arrayIndex 1 add def 2
index dup length arrayIndex gt{arrayIndex get}{pop exit}ifelse 0}ifelse}loop
pop pop pop dst_string 0 dst_index getinterval end}bind def ct_Level2?{
/ct_resourcestatus currentglobal mark true setglobal{/unknowninstancename
/Category resourcestatus}stopped{cleartomark setglobal true}{cleartomark
currentglobal not exch setglobal}ifelse{{mark 3 1 roll/Category findresource
begin ct_Vars/vm currentglobal put({ResourceStatus} stopped)0()/SubFileDecode
filter cvx exec{cleartomark false}{{3 2 roll pop true}{cleartomark false}
ifelse}ifelse ct_Vars/vm get setglobal end}}{{resourcestatus}}ifelse bind def
/CIDFont/Category ct_resourcestatus{pop pop}{currentglobal true setglobal
/Generic/Category findresource dup length dict copy dup/InstanceType/dicttype
put/CIDFont exch/Category defineresource pop setglobal}ifelse
ct_UseNativeCapability?{/CIDInit/ProcSet findresource begin 12 dict begin
begincmap/CIDSystemInfo 3 dict dup begin/Registry(Adobe)def/Ordering(Identity)
def/Supplement 0 def end def/CMapName/Identity-H def/CMapVersion 1 def
/CMapType 1 def 1 begincodespacerange<0000><ffff>endcodespacerange 1
begincidrange<0000><ffff>0 endcidrange endcmap CMapName currentdict/CMap
defineresource pop end end}if}{/ct_Category 2 dict begin/CIDFont 10 dict def
/ProcSet 2 dict def currentdict end def/defineresource{ct_Category 1 index 2
copy known{get dup dup maxlength exch length eq{dup length 10 add dict copy
ct_Category 2 index 2 index put}if 3 index 3 index put pop exch pop}{pop pop
/defineresource/undefined ct_raise}ifelse}bind def/findresource{ct_Category 1
index 2 copy known{get 2 index 2 copy known{get 3 1 roll pop pop}{pop pop
/findresource/undefinedresource ct_raise}ifelse}{pop pop/findresource
/undefined ct_raise}ifelse}bind def/resourcestatus{ct_Category 1 index 2 copy
known{get 2 index known exch pop exch pop{0 -1 true}{false}ifelse}{pop pop
/findresource/undefined ct_raise}ifelse}bind def/ct_resourcestatus
/resourcestatus load def}ifelse/ct_CIDInit 2 dict begin/ct_cidfont_stream_init
{{dup(Binary)eq{pop null currentfile ct_Level2?{{cid_BYTE_COUNT()
/SubFileDecode filter}stopped{pop pop pop}if}if/readstring load exit}if dup
(Hex)eq{pop currentfile ct_Level2?{{null exch/ASCIIHexDecode filter/readstring
}stopped{pop exch pop(>)exch/readhexstring}if}{(>)exch/readhexstring}ifelse
load exit}if/StartData/typecheck ct_raise}loop cid_BYTE_COUNT ct_CID_STR_SIZE
le{2 copy cid_BYTE_COUNT string exch exec pop 1 array dup 3 -1 roll 0 exch put
}{cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi dup array exch 2 sub 0 exch 1
exch{2 copy 5 index ct_CID_STR_SIZE string 6 index exec pop put pop}for 2
index cid_BYTE_COUNT ct_CID_STR_SIZE mod string 3 index exec pop 1 index exch
1 index length 1 sub exch put}ifelse cid_CIDFONT exch/GlyphData exch put 2
index null eq{pop pop pop}{pop/readstring load 1 string exch{3 copy exec pop
dup length 0 eq{pop pop pop pop pop true exit}if 4 index eq{pop pop pop pop
false exit}if}loop pop}ifelse}bind def/StartData{mark{currentdict dup/FDArray
get 0 get/FontMatrix get 0 get .001 eq{dup/CDevProc known not{/CDevProc
1183615869 internaldict/stdCDevProc 2 copy known{get}{pop pop{pop pop pop pop
pop 0 -1000 7 index 2 div 880}}ifelse def}if}{/CDevProc{pop pop pop pop pop 0
1 cid_temp/cid_CIDFONT get/FDArray get 0 get/FontMatrix get 0 get div 7 index
2 div 1 index .88 mul}def}ifelse/cid_temp 15 dict def cid_temp begin
/cid_CIDFONT exch def 3 copy pop dup/cid_BYTE_COUNT exch def 0 gt{
ct_cidfont_stream_init FDArray{/Private get dup/SubrMapOffset known{begin
/Subrs SubrCount array def Subrs SubrMapOffset SubrCount SDBytes ct_Level2?{
currentdict dup/SubrMapOffset undef dup/SubrCount undef/SDBytes undef}if end
/cid_SD_BYTES exch def/cid_SUBR_COUNT exch def/cid_SUBR_MAP_OFFSET exch def
/cid_SUBRS exch def cid_SUBR_COUNT 0 gt{GlyphData cid_SUBR_MAP_OFFSET
cid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi 0 1 cid_SUBR_COUNT 1 sub{
exch 1 index 1 add cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add GlyphData exch
cid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi cid_SUBRS 4 2 roll
GlyphData exch 4 index 1 index sub ct_GetInterval dup length string copy put}
for pop}if}{pop}ifelse}forall}if cleartomark pop pop end CIDFontName
currentdict/CIDFont defineresource pop end end}stopped{cleartomark/StartData
ct_reraise}if}bind def currentdict end def/ct_saveCIDInit{/CIDInit/ProcSet
ct_resourcestatus{true}{/CIDInitC/ProcSet ct_resourcestatus}ifelse{pop pop
/CIDInit/ProcSet findresource ct_UseNativeCapability?{pop null}{/CIDInit
ct_CIDInit/ProcSet defineresource pop}ifelse}{/CIDInit ct_CIDInit/ProcSet
defineresource pop null}ifelse ct_Vars exch/ct_oldCIDInit exch put}bind def
/ct_restoreCIDInit{ct_Vars/ct_oldCIDInit get dup null ne{/CIDInit exch/ProcSet
defineresource pop}{pop}ifelse}bind def/ct_BuildCharSetUp{1 index begin
CIDFont begin Adobe_CoolType_Utility/ct_BuildCharDict get begin/ct_dfCharCode
exch def/ct_dfDict exch def CIDFirstByte ct_dfCharCode add dup CIDCount ge{pop
0}if/cid exch def{GlyphDirectory cid 2 copy known{get}{pop pop nullstring}
ifelse dup length FDBytes sub 0 gt{dup FDBytes 0 ne{0 FDBytes ct_cvnsi}{pop 0}
ifelse/fdIndex exch def dup length FDBytes sub FDBytes exch getinterval
/charstring exch def exit}{pop cid 0 eq{/charstring nullstring def exit}if/cid
0 def}ifelse}loop}def/ct_SetCacheDevice{0 0 moveto dup stringwidth 3 -1 roll
true charpath pathbbox 0 -1000 7 index 2 div 880 setcachedevice2 0 0 moveto}
def/ct_CloneSetCacheProc{1 eq{stringwidth pop -2 div -880 0 -1000 setcharwidth
moveto}{usewidths?{currentfont/Widths get cid 2 copy known{get exch pop aload
pop}{pop pop stringwidth}ifelse}{stringwidth}ifelse setcharwidth 0 0 moveto}
ifelse}def/ct_Type3ShowCharString{ct_FDDict fdIndex 2 copy known{get}{
currentglobal 3 1 roll 1 index gcheck setglobal ct_Type1FontTemplate dup
maxlength dict copy begin FDArray fdIndex get dup/FontMatrix 2 copy known{get}
{pop pop ct_defaultFontMtx}ifelse/FontMatrix exch dup length array copy def
/Private get/Private exch def/Widths rootfont/Widths get def/CharStrings 1
dict dup/.notdef<d841272cf18f54fc13>dup length string copy put def currentdict
end/ct_Type1Font exch definefont dup 5 1 roll put setglobal}ifelse dup
/CharStrings get 1 index/Encoding get ct_dfCharCode get charstring put
rootfont/WMode 2 copy known{get}{pop pop 0}ifelse exch 1000 scalefont setfont
ct_str1 0 ct_dfCharCode put ct_str1 exch ct_dfSetCacheProc ct_SyntheticBold{
currentpoint ct_str1 show newpath moveto ct_str1 true charpath ct_StrokeWidth
setlinewidth stroke}{ct_str1 show}ifelse}def/ct_Type4ShowCharString{ct_dfDict
ct_dfCharCode charstring FDArray fdIndex get dup/FontMatrix get dup
ct_defaultFontMtx ct_matrixeq not{ct_1000Mtx matrix concatmatrix concat}{pop}
ifelse/Private get Adobe_CoolType_Utility/ct_Level2? get not{ct_dfDict/Private
3 -1 roll{put}1183615869 internaldict/superexec get exec}if 1183615869
internaldict Adobe_CoolType_Utility/ct_Level2? get{1 index}{3 index/Private
get mark 6 1 roll}ifelse dup/RunInt known{/RunInt get}{pop/CCRun}ifelse get
exec Adobe_CoolType_Utility/ct_Level2? get not{cleartomark}if}bind def
/ct_BuildCharIncremental{{Adobe_CoolType_Utility/ct_MakeOCF get begin
ct_BuildCharSetUp ct_ShowCharString}stopped{stop}if end end end end}bind def
/BaseFontNameStr(BF00)def/ct_Type1FontTemplate 14 dict begin/FontType 1 def
/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def/Encoding
ct_cHexEncoding def/PaintType 0 def currentdict end def/BaseFontTemplate 11
dict begin/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def
/Encoding ct_cHexEncoding def/BuildChar/ct_BuildCharIncremental load def
ct_Clone?{/FontType 3 def/ct_ShowCharString/ct_Type3ShowCharString load def
/ct_dfSetCacheProc/ct_CloneSetCacheProc load def/ct_SyntheticBold false def
/ct_StrokeWidth 1 def}{/FontType 4 def/Private 1 dict dup/lenIV 4 put def
/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def/PaintType 0 def
/ct_ShowCharString/ct_Type4ShowCharString load def}ifelse/ct_str1 1 string def
currentdict end def/BaseFontDictSize BaseFontTemplate length 5 add def
/ct_matrixeq{true 0 1 5{dup 4 index exch get exch 3 index exch get eq and dup
not{exit}if}for exch pop exch pop}bind def/ct_makeocf{15 dict begin exch/WMode
exch def exch/FontName exch def/FontType 0 def/FMapType 2 def/FontMatrix
matrix def/bfCount 1 index/CIDCount get 256 idiv 1 add dup 256 gt{pop 256}if
def/Encoding 256 array 0 1 bfCount 1 sub{2 copy dup put pop}for bfCount 1 255{
2 copy bfCount put pop}for def/FDepVector bfCount dup 256 lt{1 add}if array
def BaseFontTemplate BaseFontDictSize dict copy begin/CIDFont exch def CIDFont
/FontBBox known{CIDFont/FontBBox get/FontBBox exch def}if CIDFont/CDevProc
known{CIDFont/CDevProc get/CDevProc exch def}if currentdict end
BaseFontNameStr 3(0)putinterval 0 1 bfCount dup 256 eq{1 sub}if{FDepVector
exch 2 index BaseFontDictSize dict copy begin dup/CIDFirstByte exch 256 mul
def FontType 3 eq{/ct_FDDict 2 dict def}if currentdict end 1 index 16
BaseFontNameStr 2 2 getinterval cvrs pop BaseFontNameStr exch definefont put}
for ct_Clone?{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
if FontName currentdict end definefont ct_Clone?{gsave dup 1000 scalefont
setfont ct_BuildCharDict begin/usewidths? false def currentfont/Widths get
begin exch/CIDFont get/GlyphDirectory get{pop dup charcode exch 1 index 0 2
index 256 idiv put 1 index exch 1 exch 256 mod put stringwidth 2 array astore
def}forall end/usewidths? true def end grestore}{exch pop}ifelse}bind def
/ct_ComposeFont{ct_UseNativeCapability?{2 index/CMap ct_resourcestatus{pop pop
exch pop}{/CIDInit/ProcSet findresource begin 12 dict begin begincmap/CMapName
3 index def/CMapVersion 1 def/CMapType 1 def exch/WMode exch def/CIDSystemInfo
3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs
(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop
(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1
begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0
endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}
ifelse composefont}{3 2 roll pop 0 get/CIDFont findresource ct_makeocf}ifelse}
bind def/ct_MakeIdentity{ct_UseNativeCapability?{1 index/CMap
ct_resourcestatus{pop pop}{/CIDInit/ProcSet findresource begin 12 dict begin
begincmap/CMapName 2 index def/CMapVersion 1 def/CMapType 1 def/CIDSystemInfo
3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs
(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop
(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1
begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0
endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}
ifelse composefont}{exch pop 0 get/CIDFont findresource ct_makeocf}ifelse}bind
def currentdict readonly pop end end
%%EndResource
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2000 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Image 65 dict dup begin put
/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
%%don't initialize AGMIMG_&customcolorimage, it wrecks havoc in a nested environment
%%AGMIMG_ccimage_exists not {/AGMIMG_&customcolorimage nd} if 
/AGMIMG_&imagemask nd
/AGMIMG_mbuf () def
/AGMIMG_ybuf () def
/AGMIMG_kbuf () def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/idximg nd
/doc_setup
{ 
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage /colorimage ldf
	}if
	end
	end
}def
/page_setup
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists {/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				 }ifelse
			 }ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
	}ifelse
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/idximg /indexed_imageormask ldf
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer
{
}def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMIMG_&imagemask
			}{
				AGMIMG_&image
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get
		dup /DeviceGray eq{
			pop AGMCORE_black_plate not
		}{
			/DeviceCMYK eq{
				AGMCORE_is_cmyk_sep not
			}if
		}ifelse
	}{
		false
	}ifelse
}def
/imageormask
{
	begin
		SkipImageProc not{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					image
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					AGMCORE_host_sep{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentdict ignoreimagedata
				 		}ifelse
					}{
						imagemask
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								MultipleDataSources{
									4 {pop} repeat
									/DataSource [
										DataSource 0 get /exec cvx
										DataSource 1 get /exec cvx
										DataSource 2 get /exec cvx
										DataSource 3 get /exec cvx
										/AGMCORE_get_ink_data cvx
									] cvx def
								}{
									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def
								}ifelse
	
								/Decode [ Decode 0 get Decode 1 get ] def
								/MultipleDataSources false def
								/NComponents 1 def
								/Operator /image def
								AGMCORE_is_cmyk_sep{
									currentoverprint InksUsed current_ink not and{
										currentdict consumeimagedata
									}{
										invert_image_samples
						 				1 AGMCORE_&setgray
										currentdict imageormask_sys
									}ifelse
								}{
										currentdict ignoreimagedata
								}ifelse
							}{
									
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								/DoImage true def
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys} if
							}{
								image
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentoverprint InksUsed current_ink not and{
								}{
									currentcolorspace overprint_plate not{
										knockout_unitsq
									}if
								}ifelse
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc not{
		save mark 
	
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentoverprint InksUsed current_ink not and{
						}{
							currentdict/ImageMatrix get concat
							knockout_unitsq
						}ifelse
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{ 
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
							currentdict consumeimagedata 
 							currentoverprint not Name (All) eq or{
								gsave 
								knockout_unitsq
								grestore
		 					}if
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}if
	end
	end
}def
/imageormask_l2_overprint
{
	
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{ 			
			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN [
				AGMIMG_c 0 ne {/Cyan} if
				AGMIMG_m 0 ne {/Magenta} if
				AGMIMG_y 0 ne {/Yellow} if
				AGMIMG_k 0 ne {/Black} if
				] /DeviceCMYK {}] setcolorspace
				
				AGMIMG_c 0 ne {AGMIMG_c} if
				AGMIMG_m 0 ne {AGMIMG_m} if
				AGMIMG_y 0 ne {AGMIMG_y} if
				AGMIMG_k 0 ne {AGMIMG_k} if
				setcolor			
			}{	
				/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
				[/Indexed 				
					[
						/DeviceN [
							AGMIMG_c 0 ne {/Cyan} if
							AGMIMG_m 0 ne {/Magenta} if
							AGMIMG_y 0 ne {/Yellow} if
							AGMIMG_k 0 ne {/Black} if
						] 
						/DeviceCMYK {
							AGMIMG_k 0 eq {0} if
							AGMIMG_y 0 eq {0 exch} if
							AGMIMG_m 0 eq {0 3 1 roll} if
							AGMIMG_c 0 eq {0 4 1 roll} if						
						}
					]
					255
					{
						255 div 
		
						mark exch
						dup	dup dup
		
						
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
							
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
		
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
							
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				] setcolorspace
			}ifelse
			
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
	
 		currentdict
 		AGMCORE_host_sep{
 			
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{
					knockout_unitsq
				}if
			}{
	 			AGMCORE_is_cmyk_sep{
					Operator /imagemask eq{
						imageormask_sys
					}{
						level2{
							indexed_image_lev2_sep
						}{
							indexed_image_lev1_sep
						}ifelse
					}ifelse
				}{
					currentoverprint not{
						knockout_image_samples
		 				imageormask_sys
		 			}{
		 				currentdict consumeimagedata
		 			}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				imageormask
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		
		currentcolorspace 
		dup 1 /DeviceGray put
		dup 3 [
			currentcolorspace 3 get 
			{
				exch 4 mul 4 getinterval {} forall
				AGMCORE_get_ink_data 255 div 1 exch sub
			} /exec cvx
		] cvx put
		setcolorspace
		
		currentdict 
		Operator /imagemask eq{
			AGMIMG_&imagemask
		}{
			AGMIMG_&image
		}ifelse
			
	end end
}def
/OPIimage
{
	dup type /dicttype ne{
		10 dict begin
			/DataSource xdf
			/ImageMatrix xdf
			/BitsPerComponent xdf
			/Height xdf
			/Width xdf
			/ImageType 1 def
			/Decode [0 1 def]
			currentdict
		end
	}if
	dup begin
		/NComponents 1 cdndf
		/MultipleDataSources false cdndf
		/SkipImageProc {false} cdndf
		/HostSepColorImage false cdndf
		/Decode [
				0 
				currentcolorspace 0 get /Indexed eq{
					2 BitsPerComponent exp 1 sub
				}{
					1
				}ifelse
		] cdndf
		/Operator /image cdndf
	end
	/sep_colorspace_dict AGMCORE_gget null eq{
		imageormask
	}{
		gsave
		dup begin invert_image_samples end
		sep_imageormask
		grestore
	}ifelse
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type /dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode [/customcolor_tint AGMCORE_gget 0] def
				/Operator /image def
				/HostSepColorImage false def
				/InksUsed [] def
				/SkipImageProc {false} def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		bdict
			/Name AGMIMG_colorAry 4 get
			/CSA [ /DeviceCMYK ] 
			/TintMethod /Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components [ AGMIMG_colorAry aload pop pop ] 
		edict
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		dup 4 get map_alias{
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					} if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage	
		end
	} def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				
				{
					255 mul round cvi GrayLookup exch get
				} currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get /DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
						
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer
						currentdict imageormask
					}{ 
						
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					
					MappedCSA 0 get /DeviceGray eq {
						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get /DeviceCMYK eq {
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{ 
							currentcolortransfer
							{pop 1} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
					
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{ 
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			
			currentdict imageormask_sys
				
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				
				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				
				MappedCSA 0 get /DeviceGray eq {
					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			
			currentdict imageormask_sys
				
		end end
	}def
}if
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 true Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
Adobe_AGM_Image/doc_setup get exec
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: OnlyPage 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/page_setup get exec
Adobe_CoolType_Core/page_setup get exec
Adobe_AGM_Image/page_setup get exec
%%EndPageSetup
1 setlinecap 1 setlinejoin

%% ************************* NEW SWF ***********************
Adobe_AGM_Core/AGMCORE_save save ddf
64.9101078706 41.1817818618 translate 
1.06272473032 1.06272473032 scale 
14.2 21.2 moveto
newpath
14.2 21.2 moveto
34.1 12.95 moveto
-1.66666666667 -0.933333333333 -3.53333333333 -1.65 -5.6 -2.15 rcurveto
-2.03333333333 -0.533333333333 -4.05 -0.833333333333 -6.05 -0.9 rcurveto
-2 -0.0333333333333 -3.75 0.183333333333 -5.25 0.65 rcurveto
-2.2 0.766666666667 -3.2 1.86666666667 -3 3.3 rcurveto
0.166666666667 1.43333333333 1.5 2.86666666667 4 4.3 rcurveto
1.66666666667 0.933333333333 3.53333333333 1.66666666667 5.6 2.2 rcurveto
2.03333333333 0.5 4.05 0.783333333333 6.05 0.85 rcurveto
2 0.0666666666667 3.75 -0.133333333333 5.25 -0.6 rcurveto
2.2 -0.766666666667 3.2 -1.86666666667 3 -3.3 rcurveto
-0.166666666667 -1.43333333333 -1.5 -2.88333333333 -4 -4.35 rcurveto
0.921568627451 0.921568627451 0.921568627451 setrgbcolor
fill
28.5 11.3 moveto
newpath
28.5 11.3 moveto
45.45 4.3 moveto
-1.43333333333 -0.8 -3.01666666667 -1.41666666667 -4.75 -1.85 rcurveto
-1.76666666667 -0.433333333333 -3.5 -0.683333333333 -5.2 -0.75 rcurveto
-1.66666666667 -0.0333333333333 -3.15 0.15 -4.45 0.55 rcurveto
-1.86666666667 0.633333333333 -2.71666666667 1.56666666667 -2.55 2.8 rcurveto
0.166666666667 1.2 1.3 2.41666666667 3.4 3.65 rcurveto
1.43333333333 0.8 3.01666666667 1.41666666667 4.75 1.85 rcurveto
1.73333333333 0.466666666667 3.45 0.716666666667 5.15 0.75 rcurveto
1.7 0.0666666666667 3.18333333333 -0.1 4.45 -0.5 rcurveto
1.86666666667 -0.666666666667 2.71666666667 -1.6 2.55 -2.8 rcurveto
-0.133333333333 -1.23333333333 -1.25 -2.46666666667 -3.35 -3.7 rcurveto
0.921568627451 0.921568627451 0.921568627451 setrgbcolor
fill
22.6 -0.25 moveto
newpath
22.6 -0.25 moveto
39.55 -7.25 moveto
-1.43333333333 -0.8 -3.01666666667 -1.41666666667 -4.75 -1.85 rcurveto
-1.76666666667 -0.433333333333 -3.5 -0.683333333333 -5.2 -0.75 rcurveto
-1.66666666667 -0.0333333333333 -3.15 0.15 -4.45 0.55 rcurveto
-1.86666666667 0.633333333333 -2.71666666667 1.56666666667 -2.55 2.8 rcurveto
0.166666666667 1.2 1.3 2.41666666667 3.4 3.65 rcurveto
1.43333333333 0.8 3.01666666667 1.41666666667 4.75 1.85 rcurveto
1.73333333333 0.466666666667 3.45 0.716666666667 5.15 0.75 rcurveto
1.7 0.0666666666667 3.18333333333 -0.1 4.45 -0.5 rcurveto
1.86666666667 -0.666666666667 2.71666666667 -1.61666666667 2.55 -2.85 rcurveto
-0.133333333333 -1.2 -1.25 -2.41666666667 -3.35 -3.65 rcurveto
0.921568627451 0.921568627451 0.921568627451 setrgbcolor
fill
3.65 -10.35 moveto
newpath
3.65 -10.35 moveto
20.6 -17.35 moveto
-1.43333333333 -0.8 -3.01666666667 -1.41666666667 -4.75 -1.85 rcurveto
-1.76666666667 -0.433333333333 -3.5 -0.683333333333 -5.2 -0.75 rcurveto
-1.66666666667 -0.0333333333333 -3.15 0.15 -4.45 0.55 rcurveto
-1.86666666667 0.633333333333 -2.71666666667 1.56666666667 -2.55 2.8 rcurveto
0.166666666667 1.2 1.3 2.41666666667 3.4 3.65 rcurveto
1.43333333333 0.8 3.01666666667 1.41666666667 4.75 1.85 rcurveto
1.73333333333 0.466666666667 3.45 0.716666666667 5.15 0.75 rcurveto
1.7 0.0666666666667 3.18333333333 -0.1 4.45 -0.5 rcurveto
1.86666666667 -0.666666666667 2.71666666667 -1.61666666667 2.55 -2.85 rcurveto
-0.133333333333 -1.2 -1.25 -2.41666666667 -3.35 -3.65 rcurveto
0.921568627451 0.921568627451 0.921568627451 setrgbcolor
fill
-20.25 -15 moveto
newpath
-20.25 -15 moveto
-3.3 -22 moveto
-1.43333333333 -0.8 -3.01666666667 -1.41666666667 -4.75 -1.85 rcurveto
-1.76666666667 -0.433333333333 -3.5 -0.683333333333 -5.2 -0.75 rcurveto
-1.66666666667 -0.0333333333333 -3.15 0.15 -4.45 0.55 rcurveto
-1.86666666667 0.633333333333 -2.71666666667 1.56666666667 -2.55 2.8 rcurveto
0.166666666667 1.2 1.3 2.41666666667 3.4 3.65 rcurveto
1.43333333333 0.8 3.01666666667 1.41666666667 4.75 1.85 rcurveto
1.73333333333 0.466666666667 3.45 0.716666666667 5.15 0.75 rcurveto
1.7 0.0666666666667 3.18333333333 -0.1 4.45 -0.5 rcurveto
1.86666666667 -0.666666666667 2.71666666667 -1.61666666667 2.55 -2.85 rcurveto
-0.133333333333 -1.2 -1.25 -2.41666666667 -3.35 -3.65 rcurveto
0.921568627451 0.921568627451 0.921568627451 setrgbcolor
fill
-4.65 18.35 moveto
newpath
-4.65 18.35 moveto
-2.85 17.1 moveto
-1.13333333333 -0.666666666667 -1.73333333333 -1.31666666667 -1.8 -1.95 rcurveto
-0.0666666666667 -0.633333333333 0.383333333333 -1.13333333333 1.35 -1.5 rcurveto
1.03333333333 -0.3 2.26666666667 -0.35 3.7 -0.15 rcurveto
1.43333333333 0.2 2.73333333333 0.616666666667 3.9 1.25 rcurveto
1.13333333333 0.666666666667 1.73333333333 1.31666666667 1.8 1.95 rcurveto
0.1 0.633333333333 -0.35 1.13333333333 -1.35 1.5 rcurveto
-1.03333333333 0.3 -2.26666666667 0.35 -3.7 0.15 rcurveto
-1.43333333333 -0.2 -2.73333333333 -0.616666666667 -3.9 -1.25 rcurveto
0.921568627451 0.921568627451 0.921568627451 setrgbcolor
fill
-25.85 13.75 moveto
newpath
-25.85 13.75 moveto
-23.85 12.35 moveto
-1.23333333333 -0.733333333333 -1.9 -1.45 -2 -2.15 rcurveto
-0.1 -0.733333333333 0.4 -1.28333333333 1.5 -1.65 rcurveto
1.16666666667 -0.366666666667 2.55 -0.433333333333 4.15 -0.2 rcurveto
1.56666666667 0.233333333333 3 0.7 4.3 1.4 rcurveto
1.23333333333 0.733333333333 1.9 1.45 2 2.15 rcurveto
0.1 0.733333333333 -0.4 1.28333333333 -1.5 1.65 rcurveto
-1.16666666667 0.366666666667 -2.55 0.433333333333 -4.15 0.2 rcurveto
-1.56666666667 -0.233333333333 -3 -0.7 -4.3 -1.4 rcurveto
0.921568627451 0.921568627451 0.921568627451 setrgbcolor
fill
-43.45 4.35 moveto
newpath
-43.45 4.35 moveto
-41.05 2.65 moveto
-1.5 -0.866666666667 -2.3 -1.71666666667 -2.4 -2.55 rcurveto
-0.1 -0.866666666667 0.5 -1.53333333333 1.8 -2 rcurveto
0.9 -0.266666666667 1.95 -0.383333333333 3.15 -0.35 rcurveto
1.2 0.0333333333333 2.41666666667 0.2 3.65 0.5 rcurveto
1.23333333333 0.333333333333 2.35 0.766666666667 3.35 1.3 rcurveto
1.5 0.866666666667 2.3 1.73333333333 2.4 2.6 rcurveto
0.1 0.866666666667 -0.5 1.53333333333 -1.8 2 rcurveto
-0.9 0.266666666667 -1.95 0.383333333333 -3.15 0.35 rcurveto
-1.2 -0.0333333333333 -2.41666666667 -0.2 -3.65 -0.5 rcurveto
-1.23333333333 -0.333333333333 -2.35 -0.783333333333 -3.35 -1.35 rcurveto
0.921568627451 0.921568627451 0.921568627451 setrgbcolor
fill
-48.6 -6.2 moveto
newpath
-48.6 -6.2 moveto
-45.8 -8.15 moveto
-1.73333333333 -1 -2.66666666667 -2.01666666667 -2.8 -3.05 rcurveto
-0.133333333333 -1 0.566666666667 -1.76666666667 2.1 -2.3 rcurveto
1.06666666667 -0.333333333333 2.3 -0.483333333333 3.7 -0.45 rcurveto
1.36666666667 0.0666666666667 2.76666666667 0.283333333333 4.2 0.65 rcurveto
1.46666666667 0.366666666667 2.78333333333 0.866666666667 3.95 1.5 rcurveto
1.73333333333 1.03333333333 2.66666666667 2.05 2.8 3.05 rcurveto
0.1 1 -0.616666666667 1.76666666667 -2.15 2.3 rcurveto
-1.03333333333 0.333333333333 -2.25 0.483333333333 -3.65 0.45 rcurveto
-1.4 -0.0666666666667 -2.81666666667 -0.283333333333 -4.25 -0.65 rcurveto
-1.43333333333 -0.366666666667 -2.73333333333 -0.866666666667 -3.9 -1.5 rcurveto
0.921568627451 0.921568627451 0.921568627451 setrgbcolor
fill
-39.45 -14.05 moveto
newpath
-39.45 -14.05 moveto
-24.5 -20.05 moveto
-1.26666666667 -0.7 -2.66666666667 -1.23333333333 -4.2 -1.6 rcurveto
-1.53333333333 -0.4 -3.05 -0.633333333333 -4.55 -0.7 rcurveto
-1.5 -0.0333333333333 -2.81666666667 0.133333333333 -3.95 0.5 rcurveto
-1.63333333333 0.566666666667 -2.38333333333 1.38333333333 -2.25 2.45 rcurveto
0.133333333333 1.1 1.13333333333 2.18333333333 3 3.25 rcurveto
1.26666666667 0.7 2.66666666667 1.25 4.2 1.65 rcurveto
1.53333333333 0.4 3.05 0.616666666667 4.55 0.65 rcurveto
1.46666666667 0.0333333333333 2.76666666667 -0.116666666667 3.9 -0.45 rcurveto
1.66666666667 -0.6 2.41666666667 -1.43333333333 2.25 -2.5 rcurveto
-0.133333333333 -1.06666666667 -1.11666666667 -2.15 -2.95 -3.25 rcurveto
0.921568627451 0.921568627451 0.921568627451 setrgbcolor
fill

Adobe_AGM_Core/AGMCORE_save get restore

%% -1
%% ************************* NEW SWF ***********************
Adobe_AGM_Core/AGMCORE_save save ddf
64.9101078706 41.1817818618 translate 
1.06272473032 1.06272473032 scale 
13.8 27.5 moveto
newpath
13.8 27.5 moveto
33.7 19.25 moveto
-1.66666666667 -0.933333333333 -3.53333333333 -1.65 -5.6 -2.15 rcurveto
-2.03333333333 -0.533333333333 -4.05 -0.833333333333 -6.05 -0.9 rcurveto
-2 -0.0333333333333 -3.75 0.183333333333 -5.25 0.65 rcurveto
-2.2 0.766666666667 -3.2 1.86666666667 -3 3.3 rcurveto
0.166666666667 1.43333333333 1.5 2.86666666667 4 4.3 rcurveto
1.66666666667 0.933333333333 3.53333333333 1.66666666667 5.6 2.2 rcurveto
2.03333333333 0.5 4.05 0.783333333333 6.05 0.85 rcurveto
2 0.0666666666667 3.75 -0.133333333333 5.25 -0.6 rcurveto
2.2 -0.766666666667 3.2 -1.86666666667 3 -3.3 rcurveto
-0.166666666667 -1.43333333333 -1.5 -2.88333333333 -4 -4.35 rcurveto
0.709803921569 0.862745098039 0.0627450980392 setrgbcolor

fill
28.1 17.65 moveto
newpath
28.1 17.65 moveto
45.05 10.65 moveto
-1.43333333333 -0.8 -3.01666666667 -1.41666666667 -4.75 -1.85 rcurveto
-1.76666666667 -0.433333333333 -3.5 -0.683333333333 -5.2 -0.75 rcurveto
-1.66666666667 -0.0333333333333 -3.15 0.15 -4.45 0.55 rcurveto
-1.86666666667 0.633333333333 -2.71666666667 1.56666666667 -2.55 2.8 rcurveto
0.166666666667 1.2 1.3 2.41666666667 3.4 3.65 rcurveto
1.43333333333 0.8 3.01666666667 1.41666666667 4.75 1.85 rcurveto
1.73333333333 0.466666666667 3.45 0.716666666667 5.15 0.75 rcurveto
1.7 0.0666666666667 3.18333333333 -0.1 4.45 -0.5 rcurveto
1.86666666667 -0.666666666667 2.71666666667 -1.6 2.55 -2.8 rcurveto
-0.133333333333 -1.23333333333 -1.25 -2.46666666667 -3.35 -3.7 rcurveto
0.709803921569 0.862745098039 0.0627450980392 setrgbcolor

fill
22.2 6.1 moveto
newpath
22.2 6.1 moveto
39.15 -0.9 moveto
-1.43333333333 -0.8 -3.01666666667 -1.41666666667 -4.75 -1.85 rcurveto
-1.76666666667 -0.433333333333 -3.5 -0.683333333333 -5.2 -0.75 rcurveto
-1.66666666667 -0.0333333333333 -3.15 0.15 -4.45 0.55 rcurveto
-1.86666666667 0.633333333333 -2.71666666667 1.56666666667 -2.55 2.8 rcurveto
0.166666666667 1.2 1.3 2.41666666667 3.4 3.65 rcurveto
1.43333333333 0.8 3.01666666667 1.41666666667 4.75 1.85 rcurveto
1.73333333333 0.466666666667 3.45 0.716666666667 5.15 0.75 rcurveto
1.7 0.0666666666667 3.18333333333 -0.1 4.45 -0.5 rcurveto
1.86666666667 -0.666666666667 2.71666666667 -1.61666666667 2.55 -2.85 rcurveto
-0.133333333333 -1.2 -1.25 -2.41666666667 -3.35 -3.65 rcurveto
0.709803921569 0.862745098039 0.0627450980392 setrgbcolor

fill
3.25 -4.05 moveto
newpath
3.25 -4.05 moveto
20.2 -11.05 moveto
-1.43333333333 -0.8 -3.01666666667 -1.41666666667 -4.75 -1.85 rcurveto
-1.76666666667 -0.433333333333 -3.5 -0.683333333333 -5.2 -0.75 rcurveto
-1.66666666667 -0.0333333333333 -3.15 0.15 -4.45 0.55 rcurveto
-1.86666666667 0.633333333333 -2.71666666667 1.56666666667 -2.55 2.8 rcurveto
0.166666666667 1.2 1.3 2.41666666667 3.4 3.65 rcurveto
1.43333333333 0.8 3.01666666667 1.41666666667 4.75 1.85 rcurveto
1.73333333333 0.466666666667 3.45 0.716666666667 5.15 0.75 rcurveto
1.7 0.0666666666667 3.18333333333 -0.1 4.45 -0.5 rcurveto
1.86666666667 -0.666666666667 2.71666666667 -1.61666666667 2.55 -2.85 rcurveto
-0.133333333333 -1.2 -1.25 -2.41666666667 -3.35 -3.65 rcurveto
0.709803921569 0.862745098039 0.0627450980392 setrgbcolor

fill
-20.65 -8.65 moveto
newpath
-20.65 -8.65 moveto
-3.7 -15.65 moveto
-1.43333333333 -0.8 -3.01666666667 -1.41666666667 -4.75 -1.85 rcurveto
-1.76666666667 -0.433333333333 -3.5 -0.683333333333 -5.2 -0.75 rcurveto
-1.66666666667 -0.0333333333333 -3.15 0.15 -4.45 0.55 rcurveto
-1.86666666667 0.633333333333 -2.71666666667 1.56666666667 -2.55 2.8 rcurveto
0.166666666667 1.2 1.3 2.41666666667 3.4 3.65 rcurveto
1.43333333333 0.8 3.01666666667 1.41666666667 4.75 1.85 rcurveto
1.73333333333 0.466666666667 3.45 0.716666666667 5.15 0.75 rcurveto
1.7 0.0666666666667 3.18333333333 -0.1 4.45 -0.5 rcurveto
1.86666666667 -0.666666666667 2.71666666667 -1.61666666667 2.55 -2.85 rcurveto
-0.133333333333 -1.2 -1.25 -2.41666666667 -3.35 -3.65 rcurveto
0.709803921569 0.862745098039 0.0627450980392 setrgbcolor

fill
-5.05 24.7 moveto
newpath
-5.05 24.7 moveto
-3.25 23.45 moveto
-1.1 -0.666666666667 -1.7 -1.31666666667 -1.8 -1.95 rcurveto
-0.0666666666667 -0.633333333333 0.383333333333 -1.13333333333 1.35 -1.5 rcurveto
1.03333333333 -0.3 2.26666666667 -0.35 3.7 -0.15 rcurveto
1.43333333333 0.2 2.73333333333 0.616666666667 3.9 1.25 rcurveto
1.13333333333 0.666666666667 1.73333333333 1.31666666667 1.8 1.95 rcurveto
0.1 0.633333333333 -0.35 1.13333333333 -1.35 1.5 rcurveto
-1.03333333333 0.3 -2.26666666667 0.35 -3.7 0.15 rcurveto
-1.43333333333 -0.2 -2.73333333333 -0.616666666667 -3.9 -1.25 rcurveto
0.709803921569 0.862745098039 0.0627450980392 setrgbcolor

fill
-26.25 20.1 moveto
newpath
-26.25 20.1 moveto
-24.25 18.7 moveto
-1.23333333333 -0.733333333333 -1.9 -1.45 -2 -2.15 rcurveto
-0.1 -0.733333333333 0.4 -1.28333333333 1.5 -1.65 rcurveto
1.16666666667 -0.366666666667 2.55 -0.433333333333 4.15 -0.2 rcurveto
1.56666666667 0.233333333333 3 0.7 4.3 1.4 rcurveto
1.23333333333 0.733333333333 1.9 1.45 2 2.15 rcurveto
0.1 0.733333333333 -0.4 1.28333333333 -1.5 1.65 rcurveto
-1.16666666667 0.366666666667 -2.55 0.433333333333 -4.15 0.2 rcurveto
-1.56666666667 -0.233333333333 -3 -0.7 -4.3 -1.4 rcurveto
0.709803921569 0.862745098039 0.0627450980392 setrgbcolor

fill
-43.85 10.7 moveto
newpath
-43.85 10.7 moveto
-41.45 9 moveto
-1.5 -0.866666666667 -2.3 -1.71666666667 -2.4 -2.55 rcurveto
-0.1 -0.866666666667 0.5 -1.53333333333 1.8 -2 rcurveto
0.9 -0.266666666667 1.95 -0.383333333333 3.15 -0.35 rcurveto
1.2 0.0333333333333 2.41666666667 0.2 3.65 0.5 rcurveto
1.23333333333 0.333333333333 2.35 0.766666666667 3.35 1.3 rcurveto
1.5 0.866666666667 2.3 1.73333333333 2.4 2.6 rcurveto
0.1 0.866666666667 -0.5 1.53333333333 -1.8 2 rcurveto
-0.9 0.266666666667 -1.95 0.383333333333 -3.15 0.35 rcurveto
-1.2 -0.0333333333333 -2.41666666667 -0.2 -3.65 -0.5 rcurveto
-1.23333333333 -0.333333333333 -2.35 -0.783333333333 -3.35 -1.35 rcurveto
0.709803921569 0.862745098039 0.0627450980392 setrgbcolor

fill
-49 0.15 moveto
newpath
-49 0.15 moveto
-46.2 -1.8 moveto
-1.73333333333 -1 -2.66666666667 -2.01666666667 -2.8 -3.05 rcurveto
-0.133333333333 -1 0.566666666667 -1.76666666667 2.1 -2.3 rcurveto
1.06666666667 -0.333333333333 2.3 -0.483333333333 3.7 -0.45 rcurveto
1.36666666667 0.0666666666667 2.76666666667 0.283333333333 4.2 0.65 rcurveto
1.46666666667 0.366666666667 2.78333333333 0.866666666667 3.95 1.5 rcurveto
1.73333333333 1.03333333333 2.66666666667 2.05 2.8 3.05 rcurveto
0.1 1 -0.616666666667 1.76666666667 -2.15 2.3 rcurveto
-1.03333333333 0.333333333333 -2.25 0.483333333333 -3.65 0.45 rcurveto
-1.4 -0.0666666666667 -2.81666666667 -0.283333333333 -4.25 -0.65 rcurveto
-1.43333333333 -0.366666666667 -2.73333333333 -0.866666666667 -3.9 -1.5 rcurveto
0.709803921569 0.862745098039 0.0627450980392 setrgbcolor

fill
-39.85 -7.75 moveto
newpath
-39.85 -7.75 moveto
-24.9 -13.75 moveto
-1.26666666667 -0.7 -2.66666666667 -1.23333333333 -4.2 -1.6 rcurveto
-1.53333333333 -0.4 -3.05 -0.633333333333 -4.55 -0.7 rcurveto
-1.5 -0.0333333333333 -2.81666666667 0.133333333333 -3.95 0.5 rcurveto
-1.63333333333 0.566666666667 -2.38333333333 1.38333333333 -2.25 2.45 rcurveto
0.133333333333 1.1 1.13333333333 2.18333333333 3 3.25 rcurveto
1.26666666667 0.7 2.66666666667 1.25 4.2 1.65 rcurveto
1.53333333333 0.4 3.05 0.616666666667 4.55 0.65 rcurveto
1.46666666667 0.0333333333333 2.76666666667 -0.116666666667 3.9 -0.45 rcurveto
1.66666666667 -0.6 2.41666666667 -1.43333333333 2.25 -2.5 rcurveto
-0.133333333333 -1.06666666667 -1.11666666667 -2.15 -2.95 -3.25 rcurveto
0.709803921569 0.862745098039 0.0627450980392 setrgbcolor

fill

Adobe_AGM_Core/AGMCORE_save get restore

%% 11918352
%% ************************* NEW TEXT ****************** ( LSC Project )
Adobe_AGM_Core/AGMCORE_save save ddf
139.300838993 48.4530563324 translate 
1.25848981223 1.25848981223 scale 
newpath
-79.56 6.32 moveto
-79.56 6.32 lineto
-85.33 6.32 lineto
-88.26 -7.52 lineto
-88.26 -7.52 -88.42 -8.24 -88.28 -8.87 curveto
-88.28 -8.87 lineto
-88.28 -8.87 -88.15 -9.51 -87.78 -9.97 curveto
-87.78 -9.97 lineto
-87.78 -9.97 -87.41 -10.43 -86.83 -10.71 curveto
-86.83 -10.71 lineto
-86.83 -10.71 -86.25 -10.98 -85.54 -10.98 curveto
-85.54 -10.98 lineto
-76.31 -10.98 lineto
-75.57 -7.52 lineto
-81.34 -7.52 lineto
-81.34 -7.52 -81.82 -7.52 -82.09 -7.19 curveto
-82.09 -7.19 lineto
-82.09 -7.19 -82.35 -6.85 -82.24 -6.37 curveto
-82.24 -6.37 lineto
-79.56 6.32 lineto
closepath
-64.12 2.86 moveto
-64.12 2.86 lineto
-52.58 2.86 lineto
-51.87 6.32 lineto
-66.87 6.32 lineto
-66.87 6.32 -67.58 6.32 -68.28 6.05 curveto
-68.28 6.05 lineto
-68.28 6.05 -68.97 5.77 -69.53 5.31 curveto
-69.53 5.31 lineto
-69.53 5.31 -70.1 4.85 -70.5 4.21 curveto
-70.5 4.21 lineto
-70.5 4.21 -70.91 3.58 -71.05 2.86 curveto
-71.05 2.86 lineto
-71.78 -0.6 lineto
-71.78 -0.6 -71.95 -1.32 -71.81 -1.95 curveto
-71.81 -1.95 lineto
-71.81 -1.95 -71.67 -2.58 -71.3 -3.05 curveto
-71.3 -3.05 lineto
-71.3 -3.05 -70.93 -3.51 -70.35 -3.78 curveto
-70.35 -3.78 lineto
-70.35 -3.78 -69.78 -4.06 -69.06 -4.06 curveto
-69.06 -4.06 lineto
-60.98 -4.06 lineto
-60.98 -4.06 -60.5 -4.06 -60.23 -4.4 curveto
-60.23 -4.4 lineto
-60.23 -4.4 -59.97 -4.73 -60.08 -5.22 curveto
-60.08 -5.22 lineto
-60.32 -6.37 lineto
-60.32 -6.37 -60.43 -6.85 -60.83 -7.19 curveto
-60.83 -7.19 lineto
-60.83 -7.19 -61.24 -7.52 -61.72 -7.52 curveto
-61.72 -7.52 lineto
-73.26 -7.52 lineto
-74 -10.98 lineto
-59 -10.98 lineto
-59 -10.98 -58.28 -10.98 -57.59 -10.71 curveto
-57.59 -10.71 lineto
-57.59 -10.71 -56.9 -10.43 -56.33 -9.97 curveto
-56.33 -9.97 lineto
-56.33 -9.97 -55.77 -9.51 -55.37 -8.87 curveto
-55.37 -8.87 lineto
-55.37 -8.87 -54.96 -8.24 -54.8 -7.52 curveto
-54.8 -7.52 lineto
-54.06 -4.06 lineto
-54.06 -4.06 -53.92 -3.35 -54.06 -2.71 curveto
-54.06 -2.71 lineto
-54.06 -2.71 -54.2 -2.08 -54.56 -1.62 curveto
-54.56 -1.62 lineto
-54.56 -1.62 -54.92 -1.15 -55.49 -0.88 curveto
-55.49 -0.88 lineto
-55.49 -0.88 -56.07 -0.6 -56.78 -0.6 curveto
-56.78 -0.6 lineto
-64.86 -0.6 lineto
-64.86 -0.6 -65.35 -0.6 -65.62 -0.27 curveto
-65.62 -0.27 lineto
-65.62 -0.27 -65.9 0.07 -65.78 0.55 curveto
-65.78 0.55 lineto
-65.53 1.71 lineto
-65.53 1.71 -65.42 2.19 -65.01 2.53 curveto
-65.01 2.53 lineto
-65.01 2.53 -64.61 2.86 -64.12 2.86 curveto
-64.12 2.86 lineto
closepath
-46.47 -6.37 moveto
-46.47 -6.37 lineto
-44.76 1.71 lineto
-44.76 1.71 -44.65 2.19 -44.24 2.53 curveto
-44.24 2.53 lineto
-44.24 2.53 -43.84 2.86 -43.35 2.86 curveto
-43.35 2.86 lineto
-38.74 2.86 lineto
-38.74 2.86 -38.25 2.86 -37.99 2.53 curveto
-37.99 2.53 lineto
-37.99 2.53 -37.72 2.19 -37.84 1.71 curveto
-37.84 1.71 lineto
-38.09 0.55 lineto
-32.32 0.55 lineto
-31.82 2.86 lineto
-31.82 2.86 -31.68 3.58 -31.82 4.21 curveto
-31.82 4.21 lineto
-31.82 4.21 -31.95 4.85 -32.32 5.31 curveto
-32.32 5.31 lineto
-32.32 5.31 -32.69 5.77 -33.27 6.05 curveto
-33.27 6.05 lineto
-33.27 6.05 -33.85 6.32 -34.56 6.32 curveto
-34.56 6.32 lineto
-46.1 6.32 lineto
-46.1 6.32 -46.82 6.32 -47.51 6.05 curveto
-47.51 6.05 lineto
-47.51 6.05 -48.2 5.77 -48.77 5.31 curveto
-48.77 5.31 lineto
-48.77 5.31 -49.33 4.85 -49.73 4.21 curveto
-49.73 4.21 lineto
-49.73 4.21 -50.14 3.58 -50.28 2.86 curveto
-50.28 2.86 lineto
-52.49 -7.52 lineto
-52.49 -7.52 -52.65 -8.24 -52.52 -8.87 curveto
-52.52 -8.87 lineto
-52.52 -8.87 -52.38 -9.51 -52.01 -9.97 curveto
-52.01 -9.97 lineto
-52.01 -9.97 -51.64 -10.43 -51.06 -10.71 curveto
-51.06 -10.71 lineto
-51.06 -10.71 -50.48 -10.98 -49.77 -10.98 curveto
-49.77 -10.98 lineto
-38.23 -10.98 lineto
-38.23 -10.98 -37.52 -10.98 -36.82 -10.71 curveto
-36.82 -10.71 lineto
-36.82 -10.71 -36.13 -10.43 -35.57 -9.97 curveto
-35.57 -9.97 lineto
-35.57 -9.97 -35 -9.51 -34.6 -8.87 curveto
-34.6 -8.87 lineto
-34.6 -8.87 -34.19 -8.24 -34.03 -7.52 curveto
-34.03 -7.52 lineto
-33.55 -5.22 lineto
-39.32 -5.22 lineto
-39.55 -6.37 lineto
-39.55 -6.37 -39.66 -6.85 -40.07 -7.19 curveto
-40.07 -7.19 lineto
-40.07 -7.19 -40.47 -7.52 -40.95 -7.52 curveto
-40.95 -7.52 lineto
-45.57 -7.52 lineto
-45.57 -7.52 -46.05 -7.52 -46.32 -7.19 curveto
-46.32 -7.19 lineto
-46.32 -7.19 -46.58 -6.85 -46.47 -6.37 curveto
-46.47 -6.37 lineto
closepath
-10.15 1.71 moveto
-10.15 1.71 lineto
-10.15 1.71 -10.03 2.19 -9.63 2.53 curveto
-9.63 2.53 lineto
-9.63 2.53 -9.22 2.86 -8.74 2.86 curveto
-8.74 2.86 lineto
-4.12 2.86 lineto
-4.12 2.86 -3.64 2.86 -3.37 2.53 curveto
-3.37 2.53 lineto
-3.37 2.53 -3.11 2.19 -3.22 1.71 curveto
-3.22 1.71 lineto
-3.96 -1.75 lineto
-3.96 -1.75 -4.08 -2.24 -4.48 -2.57 curveto
-4.48 -2.57 lineto
-4.48 -2.57 -4.88 -2.91 -5.37 -2.91 curveto
-5.37 -2.91 lineto
-9.98 -2.91 lineto
-10.7 -6.37 lineto
-2.62 -6.37 lineto
-2.62 -6.37 -1.91 -6.37 -1.22 -6.09 curveto
-1.22 -6.09 lineto
-1.22 -6.09 -0.52 -5.82 0.04 -5.35 curveto
0.04 -5.35 lineto
0.04 -5.35 0.61 -4.89 1.01 -4.26 curveto
1.01 -4.26 lineto
1.01 -4.26 1.42 -3.62 1.55 -2.91 curveto
1.55 -2.91 lineto
2.8 2.86 lineto
2.8 2.86 2.94 3.58 2.8 4.21 curveto
2.8 4.21 lineto
2.8 4.21 2.66 4.85 2.29 5.31 curveto
2.29 5.31 lineto
2.29 5.31 1.92 5.77 1.35 6.05 curveto
1.35 6.05 lineto
1.35 6.05 0.77 6.32 0.05 6.32 curveto
0.05 6.32 lineto
-11.48 6.32 lineto
-11.48 6.32 -12.2 6.32 -12.89 6.05 curveto
-12.89 6.05 lineto
-12.89 6.05 -13.58 5.77 -14.15 5.31 curveto
-14.15 5.31 lineto
-14.15 5.31 -14.72 4.85 -15.12 4.21 curveto
-15.12 4.21 lineto
-15.12 4.21 -15.52 3.58 -15.66 2.86 curveto
-15.66 2.86 lineto
-18.62 -10.98 lineto
-12.85 -10.98 lineto
-10.15 1.71 lineto
closepath
9.63 -2.91 moveto
9.63 -2.91 lineto
9.63 -2.91 9.75 -2.42 10.15 -2.09 curveto
10.15 -2.09 lineto
10.15 -2.09 10.55 -1.75 11.04 -1.75 curveto
11.04 -1.75 lineto
16.81 -1.75 lineto
17.55 1.71 lineto
8.32 1.71 lineto
8.32 1.71 7.6 1.71 6.91 1.43 curveto
6.91 1.43 lineto
6.91 1.43 6.22 1.15 5.65 0.69 curveto
5.65 0.69 lineto
5.65 0.69 5.08 0.23 4.68 -0.4 curveto
4.68 -0.4 lineto
4.68 -0.4 4.28 -1.04 4.12 -1.75 curveto
4.12 -1.75 lineto
2.15 -10.98 lineto
7.92 -10.98 lineto
9.63 -2.91 lineto
closepath
17.89 -7.52 moveto
17.89 -7.52 lineto
17.89 -7.52 17.73 -8.24 17.87 -8.87 curveto
17.87 -8.87 lineto
17.87 -8.87 18.01 -9.51 18.38 -9.97 curveto
18.38 -9.97 lineto
18.38 -9.97 18.75 -10.43 19.32 -10.71 curveto
19.32 -10.71 lineto
19.32 -10.71 19.9 -10.98 20.62 -10.98 curveto
20.62 -10.98 lineto
32.15 -10.98 lineto
32.15 -10.98 32.87 -10.98 33.56 -10.71 curveto
33.56 -10.71 lineto
33.56 -10.71 34.25 -10.43 34.82 -9.97 curveto
34.82 -9.97 lineto
34.82 -9.97 35.38 -9.51 35.79 -8.87 curveto
35.79 -8.87 lineto
35.79 -8.87 36.19 -8.24 36.35 -7.52 curveto
36.35 -7.52 lineto
37.58 -1.75 lineto
37.58 -1.75 37.74 -1.04 37.6 -0.4 curveto
37.6 -0.4 lineto
37.6 -0.4 37.46 0.23 37.09 0.69 curveto
37.09 0.69 lineto
37.09 0.69 36.72 1.15 36.15 1.43 curveto
36.15 1.43 lineto
36.15 1.43 35.57 1.71 34.85 1.71 curveto
34.85 1.71 lineto
23.32 1.71 lineto
23.32 1.71 22.6 1.71 21.91 1.43 curveto
21.91 1.43 lineto
21.91 1.43 21.22 1.15 20.65 0.69 curveto
20.65 0.69 lineto
20.65 0.69 20.08 0.23 19.68 -0.4 curveto
19.68 -0.4 lineto
19.68 -0.4 19.28 -1.04 19.12 -1.75 curveto
19.12 -1.75 lineto
17.89 -7.52 lineto
closepath
23.92 -6.37 moveto
23.92 -6.37 lineto
24.63 -2.91 lineto
24.63 -2.91 24.75 -2.42 25.15 -2.09 curveto
25.15 -2.09 lineto
25.15 -2.09 25.55 -1.75 26.04 -1.75 curveto
26.04 -1.75 lineto
30.65 -1.75 lineto
30.65 -1.75 31.14 -1.75 31.4 -2.09 curveto
31.4 -2.09 lineto
31.4 -2.09 31.67 -2.42 31.55 -2.91 curveto
31.55 -2.91 lineto
30.84 -6.37 lineto
30.84 -6.37 30.72 -6.85 30.32 -7.19 curveto
30.32 -7.19 lineto
30.32 -7.19 29.92 -7.52 29.43 -7.52 curveto
29.43 -7.52 lineto
24.82 -7.52 lineto
24.82 -7.52 24.33 -7.52 24.07 -7.19 curveto
24.07 -7.19 lineto
24.07 -7.19 23.8 -6.85 23.92 -6.37 curveto
23.92 -6.37 lineto
closepath
37.92 -10.94 moveto
37.92 -10.94 lineto
37.92 -10.94 37.81 -11.42 37.42 -11.76 curveto
37.42 -11.76 lineto
37.42 -11.76 37.02 -12.09 36.54 -12.09 curveto
36.54 -12.09 lineto
30.77 -12.09 lineto
30.03 -15.55 lineto
39.26 -15.55 lineto
39.26 -15.55 39.98 -15.55 40.67 -15.28 curveto
40.67 -15.28 lineto
40.67 -15.28 41.36 -15 41.93 -14.54 curveto
41.93 -14.54 lineto
41.93 -14.54 42.49 -14.08 42.9 -13.44 curveto
42.9 -13.44 lineto
42.9 -13.44 43.3 -12.81 43.46 -12.09 curveto
43.46 -12.09 lineto
46.39 1.71 lineto
40.62 1.71 lineto
37.92 -10.94 lineto
closepath
47.36 6.32 moveto
47.36 6.32 lineto
41.59 6.32 lineto
40.88 2.88 lineto
46.65 2.88 lineto
47.36 6.32 lineto
closepath
59.68 -6.37 moveto
59.68 -6.37 lineto
65.45 -6.37 lineto
66.42 -1.75 lineto
66.42 -1.75 66.58 -1.04 66.45 -0.4 curveto
66.45 -0.4 lineto
66.45 -0.4 66.31 0.23 65.94 0.69 curveto
65.94 0.69 lineto
65.94 0.69 65.57 1.15 64.99 1.43 curveto
64.99 1.43 lineto
64.99 1.43 64.42 1.71 63.7 1.71 curveto
63.7 1.71 lineto
52.16 1.71 lineto
52.16 1.71 51.45 1.71 50.75 1.43 curveto
50.75 1.43 lineto
50.75 1.43 50.06 1.15 49.5 0.69 curveto
49.5 0.69 lineto
49.5 0.69 48.93 0.23 48.53 -0.4 curveto
48.53 -0.4 lineto
48.53 -0.4 48.12 -1.04 47.96 -1.75 curveto
47.96 -1.75 lineto
46.74 -7.52 lineto
46.74 -7.52 46.58 -8.24 46.72 -8.87 curveto
46.72 -8.87 lineto
46.72 -8.87 46.85 -9.51 47.22 -9.97 curveto
47.22 -9.97 lineto
47.22 -9.97 47.59 -10.43 48.17 -10.71 curveto
48.17 -10.71 lineto
48.17 -10.71 48.75 -10.98 49.46 -10.98 curveto
49.46 -10.98 lineto
64.46 -10.98 lineto
65.2 -7.52 lineto
53.66 -7.52 lineto
53.66 -7.52 53.18 -7.52 52.91 -7.19 curveto
52.91 -7.19 lineto
52.91 -7.19 52.65 -6.85 52.76 -6.37 curveto
52.76 -6.37 lineto
53.48 -2.91 lineto
53.48 -2.91 53.59 -2.42 54 -2.09 curveto
54 -2.09 lineto
54 -2.09 54.4 -1.75 54.88 -1.75 curveto
54.88 -1.75 lineto
59.5 -1.75 lineto
59.5 -1.75 59.98 -1.75 60.25 -2.09 curveto
60.25 -2.09 lineto
60.25 -2.09 60.52 -2.42 60.4 -2.91 curveto
60.4 -2.91 lineto
59.68 -6.37 lineto
closepath
73.53 -6.37 moveto
73.53 -6.37 lineto
74.25 -2.91 lineto
74.25 -2.91 74.36 -2.42 74.77 -2.09 curveto
74.77 -2.09 lineto
74.77 -2.09 75.17 -1.75 75.65 -1.75 curveto
75.65 -1.75 lineto
87.19 -1.75 lineto
87.93 1.71 lineto
72.93 1.71 lineto
72.93 1.71 72.22 1.71 71.52 1.43 curveto
71.52 1.43 lineto
71.52 1.43 70.83 1.15 70.27 0.69 curveto
70.27 0.69 lineto
70.27 0.69 69.7 0.23 69.3 -0.4 curveto
69.3 -0.4 lineto
69.3 -0.4 68.89 -1.04 68.73 -1.75 curveto
68.73 -1.75 lineto
67.51 -7.52 lineto
67.51 -7.52 67.35 -8.24 67.48 -8.87 curveto
67.48 -8.87 lineto
67.48 -8.87 67.62 -9.51 67.99 -9.97 curveto
67.99 -9.97 lineto
67.99 -9.97 68.36 -10.43 68.94 -10.71 curveto
68.94 -10.71 lineto
68.94 -10.71 69.52 -10.98 70.23 -10.98 curveto
70.23 -10.98 lineto
85.23 -10.98 lineto
85.97 -7.52 lineto
74.43 -7.52 lineto
74.43 -7.52 73.95 -7.52 73.68 -7.19 curveto
73.68 -7.19 lineto
73.68 -7.19 73.42 -6.85 73.53 -6.37 curveto
73.53 -6.37 lineto
closepath
102.93 1.71 moveto
102.93 1.71 lineto
96.01 1.71 lineto
96.98 6.32 lineto
91.21 6.32 lineto
88.28 -7.52 lineto
88.28 -7.52 88.12 -8.24 88.25 -8.87 curveto
88.25 -8.87 lineto
88.25 -8.87 88.39 -9.51 88.76 -9.97 curveto
88.76 -9.97 lineto
88.76 -9.97 89.13 -10.43 89.71 -10.71 curveto
89.71 -10.71 lineto
89.71 -10.71 90.28 -10.98 91 -10.98 curveto
91 -10.98 lineto
100.23 -10.98 lineto
100.97 -7.52 lineto
95.2 -7.52 lineto
95.2 -7.52 94.72 -7.52 94.45 -7.19 curveto
94.45 -7.19 lineto
94.45 -7.19 94.18 -6.85 94.3 -6.37 curveto
94.3 -6.37 lineto
95.27 -1.75 lineto
102.19 -1.75 lineto
102.93 1.71 lineto
closepath
0.76862745098 0.0705882352941 0 setrgbcolor

fill

Adobe_AGM_Core/AGMCORE_save get restore

%% ************************* NEW TEXT ****************** ( Ldap Synchronization Connector )
Adobe_AGM_Core/AGMCORE_save save ddf
145.453455853 23.8425888933 translate 
0.419496604075 0.419496604075 scale 
newpath
-263.48 -7.43 moveto
-263.48 -7.43 lineto
-264.98 -11.18 lineto
-283.28 -11.18 lineto
-283.28 -11.18 -282.35 -9.8 -281.84 -7.76 curveto
-281.84 -7.76 lineto
-278.21 6.19 lineto
-278.21 6.19 -278.03 6.91 -278.03 7.75 curveto
-278.03 7.75 lineto
-278.03 7.75 -278.03 8.23 -278.21 8.83 curveto
-278.21 8.83 lineto
-269.27 8.83 lineto
-269.27 8.83 -270.2 7.39 -270.71 5.41 curveto
-270.71 5.41 lineto
-274.16 -7.88 lineto
-269.15 -7.88 lineto
-269.15 -7.88 -264.98 -7.88 -263.48 -7.43 curveto
-263.48 -7.43 lineto
closepath
-239.09 8.83 moveto
-239.09 8.83 lineto
-243.59 -8.54 lineto
-243.59 -8.54 -243.8 -9.26 -243.8 -10.13 curveto
-243.8 -10.13 lineto
-243.8 -10.13 -243.8 -10.58 -243.59 -11.18 curveto
-243.59 -11.18 lineto
-251.15 -11.18 lineto
-251.15 -9.92 lineto
-251.15 -9.92 -251.63 -10.7 -252.29 -10.97 curveto
-252.29 -10.97 lineto
-252.29 -10.97 -252.8 -11.18 -253.82 -11.18 curveto
-253.82 -11.18 lineto
-257.9 -11.18 lineto
-257.9 -11.18 -260.21 -11.18 -261.35 -10.1 curveto
-261.35 -10.1 lineto
-261.35 -10.1 -262.4 -9.11 -262.4 -7.67 curveto
-262.4 -7.67 lineto
-262.4 -7.67 -262.4 -7.13 -262.04 -5.81 curveto
-262.04 -5.81 lineto
-260.54 0.01 lineto
-260.54 0.01 -260.03 1.96 -258.8 2.77 curveto
-258.8 2.77 lineto
-258.8 2.77 -257.69 3.52 -255.77 3.52 curveto
-255.77 3.52 lineto
-250.49 3.52 lineto
-250.49 3.52 -249.5 3.52 -248.94 3.23 curveto
-248.94 3.23 lineto
-248.94 3.23 -248.39 2.95 -248.06 2.08 curveto
-248.06 2.08 lineto
-246.98 6.19 lineto
-246.98 6.19 -246.8 6.91 -246.8 7.75 curveto
-246.8 7.75 lineto
-246.8 7.75 -246.8 8.23 -246.98 8.83 curveto
-246.98 8.83 lineto
-239.09 8.83 lineto
closepath
-253.79 -8.33 moveto
-253.79 -8.33 lineto
-252.11 -8.33 lineto
-252.11 -8.33 -251.27 -8.33 -250.94 -8.08 curveto
-250.94 -8.08 lineto
-250.94 -8.08 -250.61 -7.82 -250.4 -7.01 curveto
-250.4 -7.01 lineto
-248.96 -1.43 lineto
-248.96 -1.43 -248.78 -0.71 -248.78 -0.23 curveto
-248.78 -0.23 lineto
-248.78 -0.23 -248.78 0.67 -250.1 0.67 curveto
-250.1 0.67 lineto
-251.81 0.67 lineto
-251.81 0.67 -252.8 0.67 -253.16 0.19 curveto
-253.16 0.19 lineto
-253.16 0.19 -253.37 -0.11 -253.67 -1.25 curveto
-253.67 -1.25 lineto
-254.99 -6.38 lineto
-254.99 -6.38 -255.23 -7.34 -255.23 -7.49 curveto
-255.23 -7.49 lineto
-255.23 -7.49 -255.23 -8.33 -253.79 -8.33 curveto
-253.79 -8.33 lineto
closepath
-237.38 3.52 moveto
-237.38 3.52 lineto
-223.97 3.52 lineto
-223.97 3.52 -222.29 3.52 -221.36 2.71 curveto
-221.36 2.71 lineto
-221.36 2.71 -220.01 1.57 -220.01 -0.17 curveto
-220.01 -0.17 lineto
-220.01 -0.17 -220.01 -0.95 -220.31 -2.18 curveto
-220.31 -2.18 lineto
-221.96 -8.54 lineto
-221.96 -8.54 -222.14 -9.26 -222.14 -10.13 curveto
-222.14 -10.13 lineto
-222.14 -10.13 -222.14 -10.58 -221.96 -11.18 curveto
-221.96 -11.18 lineto
-229.07 -11.18 lineto
-229.07 -11.18 -229.25 -10.64 -229.25 -10.07 curveto
-229.25 -10.07 lineto
-229.25 -9.74 lineto
-229.25 -9.74 -230.03 -11.18 -232.1 -11.18 curveto
-232.1 -11.18 lineto
-236.36 -11.18 lineto
-236.36 -11.18 -238.19 -11.18 -239.42 -10.34 curveto
-239.42 -10.34 lineto
-239.42 -10.34 -240.8 -9.35 -240.8 -7.58 curveto
-240.8 -7.58 lineto
-240.8 -7.58 -240.8 -7.01 -240.59 -6.23 curveto
-240.59 -6.23 lineto
-240.23 -4.82 lineto
-240.23 -4.82 -239.72 -2.81 -238.61 -2.06 curveto
-238.61 -2.06 lineto
-238.61 -2.06 -237.59 -1.34 -235.43 -1.34 curveto
-235.43 -1.34 lineto
-228.56 -1.34 lineto
-228.56 -1.34 -227.78 -1.34 -227.54 -1.16 curveto
-227.54 -1.16 lineto
-227.54 -1.16 -227.15 -0.83 -227.15 -0.14 curveto
-227.15 -0.14 lineto
-227.15 -0.14 -227.15 0.67 -228.71 0.67 curveto
-228.71 0.67 lineto
-235.85 0.67 lineto
-235.85 0.67 -237.98 0.67 -238.97 0.1 curveto
-238.97 0.1 lineto
-237.38 3.52 lineto
closepath
-228.08 -4.16 moveto
-228.08 -4.16 lineto
-231.56 -4.16 lineto
-231.56 -4.16 -232.43 -4.16 -232.71 -4.37 curveto
-232.71 -4.37 lineto
-232.71 -4.37 -233 -4.58 -233.21 -5.36 curveto
-233.21 -5.36 lineto
-233.6 -6.83 lineto
-233.6 -6.83 -233.72 -7.28 -233.72 -7.46 curveto
-233.72 -7.46 lineto
-233.72 -7.46 -233.72 -8.33 -232.31 -8.33 curveto
-232.31 -8.33 lineto
-230.54 -8.33 lineto
-230.54 -8.33 -229.64 -8.33 -229.43 -8.21 curveto
-229.43 -8.21 lineto
-229.43 -8.21 -229.1 -8.03 -228.89 -7.28 curveto
-228.89 -7.28 lineto
-228.08 -4.16 lineto
closepath
-221.24 -16.49 moveto
-221.24 -16.49 lineto
-216.74 0.88 lineto
-216.74 0.88 -216.53 1.6 -216.53 2.47 curveto
-216.53 2.47 lineto
-216.53 2.47 -216.53 2.95 -216.74 3.52 curveto
-216.74 3.52 lineto
-209.18 3.52 lineto
-209.18 2.29 lineto
-209.18 2.29 -208.67 3.04 -208.04 3.31 curveto
-208.04 3.31 lineto
-208.04 3.31 -207.53 3.52 -206.51 3.52 curveto
-206.51 3.52 lineto
-202.46 3.52 lineto
-202.46 3.52 -200.12 3.52 -198.98 2.44 curveto
-198.98 2.44 lineto
-198.98 2.44 -197.93 1.45 -197.93 0.04 curveto
-197.93 0.04 lineto
-197.93 0.04 -197.93 -0.53 -198.26 -1.82 curveto
-198.26 -1.82 lineto
-199.79 -7.67 lineto
-199.79 -7.67 -200.27 -9.56 -201.41 -10.37 curveto
-201.41 -10.37 lineto
-201.41 -10.37 -202.55 -11.18 -204.56 -11.18 curveto
-204.56 -11.18 lineto
-209.84 -11.18 lineto
-209.84 -11.18 -210.83 -11.18 -211.37 -10.9 curveto
-211.37 -10.9 lineto
-211.37 -10.9 -211.91 -10.61 -212.3 -9.74 curveto
-212.3 -9.74 lineto
-213.35 -13.82 lineto
-213.35 -13.82 -213.53 -14.57 -213.53 -15.41 curveto
-213.53 -15.41 lineto
-213.53 -15.41 -213.53 -15.89 -213.32 -16.49 curveto
-213.32 -16.49 lineto
-221.24 -16.49 lineto
closepath
-206.54 0.67 moveto
-206.54 0.67 lineto
-208.19 0.67 lineto
-208.19 0.67 -209.03 0.67 -209.37 0.41 curveto
-209.37 0.41 lineto
-209.37 0.41 -209.72 0.16 -209.93 -0.62 curveto
-209.93 -0.62 lineto
-211.37 -6.2 lineto
-211.37 -6.2 -211.55 -6.95 -211.55 -7.4 curveto
-211.55 -7.4 lineto
-211.55 -7.4 -211.55 -8.33 -210.2 -8.33 curveto
-210.2 -8.33 lineto
-208.52 -8.33 lineto
-208.52 -8.33 -207.53 -8.33 -207.17 -7.82 curveto
-207.17 -7.82 lineto
-207.17 -7.82 -206.96 -7.55 -206.66 -6.38 curveto
-206.66 -6.38 lineto
-205.34 -1.25 lineto
-205.34 -1.25 -205.07 -0.32 -205.07 -0.14 curveto
-205.07 -0.14 lineto
-205.07 -0.14 -205.07 0.67 -206.54 0.67 curveto
-206.54 0.67 lineto
closepath
-167.3 8.83 moveto
-167.3 8.83 lineto
-167.75 4.69 lineto
-167.75 4.69 -168.89 5.53 -170.84 5.53 curveto
-170.84 5.53 lineto
-177.83 5.53 lineto
-177.83 5.53 -179.03 5.53 -179.36 4.96 curveto
-179.36 4.96 lineto
-179.36 4.96 -179.48 4.75 -179.64 4.1 curveto
-179.64 4.1 lineto
-179.64 4.1 -179.81 3.46 -179.81 3.25 curveto
-179.81 3.25 lineto
-179.81 3.25 -179.81 2.53 -178.61 2.53 curveto
-178.61 2.53 lineto
-172.55 2.53 lineto
-172.55 2.53 -170.96 2.53 -170.27 1.93 curveto
-170.27 1.93 lineto
-170.27 1.93 -169.34 1.06 -169.34 -0.14 curveto
-169.34 -0.14 lineto
-169.34 -0.14 -169.34 -0.71 -169.61 -1.73 curveto
-169.61 -1.73 lineto
-170.9 -6.8 lineto
-170.9 -6.8 -171.59 -9.41 -172.82 -10.28 curveto
-172.82 -10.28 lineto
-172.82 -10.28 -173.78 -10.94 -175.13 -11.12 curveto
-175.13 -11.12 lineto
-175.13 -11.12 -175.73 -11.18 -177.65 -11.18 curveto
-177.65 -11.18 lineto
-190.85 -11.18 lineto
-190.28 -7.13 lineto
-190.28 -7.13 -189.38 -7.67 -188.57 -7.82 curveto
-188.57 -7.82 lineto
-188.57 -7.82 -188.09 -7.88 -186.68 -7.88 curveto
-186.68 -7.88 lineto
-180.17 -7.88 lineto
-180.17 -7.88 -179.45 -7.88 -179.27 -7.85 curveto
-179.27 -7.85 lineto
-179.27 -7.85 -178.85 -7.73 -178.64 -7.28 curveto
-178.64 -7.28 lineto
-178.64 -7.28 -178.25 -6.41 -178.25 -5.72 curveto
-178.25 -5.72 lineto
-178.25 -5.72 -178.25 -4.97 -179.39 -5 curveto
-179.39 -5 lineto
-180.2 -5 lineto
-185.03 -5 lineto
-185.03 -5 -188.78 -5 -188.78 -2.27 curveto
-188.78 -2.27 lineto
-188.78 -2.27 -188.78 -1.52 -188.39 0.07 curveto
-188.39 0.07 lineto
-187.16 4.69 lineto
-187.16 4.69 -186.59 6.94 -185.03 7.96 curveto
-185.03 7.96 lineto
-185.03 7.96 -183.71 8.83 -181.37 8.83 curveto
-181.37 8.83 lineto
-167.3 8.83 lineto
closepath
-146.36 3.52 moveto
-146.36 3.52 lineto
-150.44 -12.29 lineto
-150.44 -12.29 -150.83 -13.79 -151.01 -14.3 curveto
-151.01 -14.3 lineto
-151.01 -14.3 -151.46 -15.38 -152.21 -15.95 curveto
-152.21 -15.95 lineto
-152.21 -15.95 -153.32 -16.79 -155.96 -16.79 curveto
-155.96 -16.79 lineto
-170.39 -16.79 lineto
-170.09 -13.61 lineto
-170.09 -13.61 -168.95 -13.94 -167.51 -13.94 curveto
-167.51 -13.94 lineto
-159.68 -13.94 lineto
-159.68 -13.94 -158.69 -13.94 -158.31 -13.69 curveto
-158.31 -13.69 lineto
-158.31 -13.69 -157.94 -13.43 -157.7 -12.53 curveto
-157.7 -12.53 lineto
-157.1 -10.25 lineto
-157.1 -10.25 -157.64 -10.91 -158.27 -11.09 curveto
-158.27 -11.09 lineto
-158.27 -11.09 -158.63 -11.18 -159.74 -11.18 curveto
-159.74 -11.18 lineto
-163.4 -11.18 lineto
-163.4 -11.18 -163.85 -11.18 -164.99 -11.05 curveto
-164.99 -11.05 lineto
-164.99 -11.05 -166.13 -10.91 -166.94 -10.19 curveto
-166.94 -10.19 lineto
-166.94 -10.19 -168.29 -8.99 -168.29 -7.34 curveto
-168.29 -7.34 lineto
-168.29 -7.34 -168.29 -6.68 -167.9 -5.18 curveto
-167.9 -5.18 lineto
-166.34 0.88 lineto
-166.34 0.88 -166.16 1.63 -166.16 2.47 curveto
-166.16 2.47 lineto
-166.16 2.47 -166.16 2.95 -166.37 3.52 curveto
-166.37 3.52 lineto
-158.48 3.52 lineto
-161.09 -6.68 lineto
-161.09 -6.68 -161.09 -6.74 -161.19 -7.06 curveto
-161.19 -7.06 lineto
-161.19 -7.06 -161.3 -7.37 -161.3 -7.55 curveto
-161.3 -7.55 lineto
-161.3 -7.55 -161.3 -8.33 -159.89 -8.33 curveto
-159.89 -8.33 lineto
-158.06 -8.33 lineto
-158.06 -8.33 -157.16 -8.33 -156.8 -7.99 curveto
-156.8 -7.99 lineto
-156.8 -7.99 -156.44 -7.64 -156.2 -6.71 curveto
-156.2 -6.71 lineto
-154.22 0.88 lineto
-154.22 0.88 -154.04 1.63 -154.04 2.47 curveto
-154.04 2.47 lineto
-154.04 2.47 -154.04 2.95 -154.25 3.52 curveto
-154.25 3.52 lineto
-146.36 3.52 lineto
closepath
-136.61 3.52 moveto
-136.61 3.52 lineto
-136.97 2.17 lineto
-136.97 2.17 -136.49 3.04 -135.98 3.31 curveto
-135.98 3.31 lineto
-135.98 3.31 -135.56 3.52 -134.51 3.52 curveto
-134.51 3.52 lineto
-129.65 3.52 lineto
-129.65 3.52 -127.85 3.52 -126.69 2.51 curveto
-126.69 2.51 lineto
-126.69 2.51 -125.54 1.51 -125.54 -0.26 curveto
-125.54 -0.26 lineto
-125.54 -0.26 -125.54 -1.25 -125.87 -2.6 curveto
-125.87 -2.6 lineto
-127.43 -8.54 lineto
-127.43 -8.54 -127.61 -9.29 -127.61 -10.13 curveto
-127.61 -10.13 lineto
-127.61 -10.13 -127.61 -10.61 -127.43 -11.18 curveto
-127.43 -11.18 lineto
-135.89 -11.18 lineto
-135.89 -11.18 -134.96 -9.83 -134.42 -7.76 curveto
-134.42 -7.76 lineto
-132.74 -1.25 lineto
-132.74 -1.25 -132.5 -0.29 -132.5 -0.08 curveto
-132.5 -0.08 lineto
-132.5 -0.08 -132.5 0.46 -133.13 0.64 curveto
-133.13 0.64 lineto
-133.13 0.64 -133.31 0.67 -133.91 0.67 curveto
-133.91 0.67 lineto
-135.62 0.67 lineto
-135.62 0.67 -136.49 0.67 -136.83 0.38 curveto
-136.83 0.38 lineto
-136.83 0.38 -137.18 0.1 -137.39 -0.74 curveto
-137.39 -0.74 lineto
-139.43 -8.54 lineto
-139.43 -8.54 -139.61 -9.29 -139.61 -10.13 curveto
-139.61 -10.13 lineto
-139.61 -10.13 -139.61 -10.61 -139.43 -11.18 curveto
-139.43 -11.18 lineto
-147.89 -11.18 lineto
-147.89 -11.18 -146.93 -9.77 -146.42 -7.76 curveto
-146.42 -7.76 lineto
-144.17 0.88 lineto
-144.17 0.88 -143.99 1.6 -143.99 2.47 curveto
-143.99 2.47 lineto
-143.99 2.47 -143.99 2.95 -144.2 3.52 curveto
-144.2 3.52 lineto
-136.61 3.52 lineto
closepath
-106.43 0.19 moveto
-106.43 0.19 lineto
-106.43 0.19 -107.15 0.67 -108.74 0.67 curveto
-108.74 0.67 lineto
-113.69 0.67 lineto
-113.69 0.67 -114.65 0.67 -115.05 0.38 curveto
-115.05 0.38 lineto
-115.05 0.38 -115.46 0.1 -115.7 -0.83 curveto
-115.7 -0.83 lineto
-117.17 -6.59 lineto
-117.17 -6.59 -117.32 -7.16 -117.32 -7.37 curveto
-117.32 -7.37 lineto
-117.32 -7.37 -117.32 -8.33 -115.31 -8.33 curveto
-115.31 -8.33 lineto
-111.14 -8.33 lineto
-111.14 -8.33 -109.43 -8.33 -108.56 -7.97 curveto
-108.56 -7.97 lineto
-109.88 -11.18 lineto
-119.66 -11.18 lineto
-119.66 -11.18 -122.12 -11.18 -123.17 -10.34 curveto
-123.17 -10.34 lineto
-123.17 -10.34 -124.52 -9.26 -124.52 -7.7 curveto
-124.52 -7.7 lineto
-124.52 -7.7 -124.52 -7.1 -124.25 -6.05 curveto
-124.25 -6.05 lineto
-122.66 0.07 lineto
-122.66 0.07 -122.15 2.08 -120.8 2.89 curveto
-120.8 2.89 lineto
-120.8 2.89 -119.75 3.52 -117.26 3.52 curveto
-117.26 3.52 lineto
-106.04 3.52 lineto
-106.43 0.19 lineto
closepath
-95.15 8.83 moveto
-95.15 8.83 lineto
-96.71 2.68 lineto
-96.71 2.68 -95.87 3.52 -94.25 3.52 curveto
-94.25 3.52 lineto
-90.44 3.52 lineto
-90.44 3.52 -88.01 3.52 -86.99 2.59 curveto
-86.99 2.59 lineto
-86.99 2.59 -85.64 1.39 -85.64 -0.26 curveto
-85.64 -0.26 lineto
-85.64 -0.26 -85.64 -0.89 -85.91 -1.91 curveto
-85.91 -1.91 lineto
-87.62 -8.54 lineto
-87.62 -8.54 -87.8 -9.29 -87.8 -10.13 curveto
-87.8 -10.13 lineto
-87.8 -10.13 -87.8 -10.58 -87.62 -11.18 curveto
-87.62 -11.18 lineto
-96.08 -11.18 lineto
-96.08 -11.18 -95.15 -9.83 -94.61 -7.76 curveto
-94.61 -7.76 lineto
-92.96 -1.31 lineto
-92.96 -1.31 -92.78 -0.68 -92.78 -0.38 curveto
-92.78 -0.38 lineto
-92.78 -0.38 -92.78 0.67 -94.28 0.67 curveto
-94.28 0.67 lineto
-95.72 0.67 lineto
-95.72 0.67 -96.68 0.67 -97.05 0.31 curveto
-97.05 0.31 lineto
-97.05 0.31 -97.43 -0.05 -97.7 -1.04 curveto
-97.7 -1.04 lineto
-99.62 -8.54 lineto
-99.62 -8.54 -99.8 -9.29 -99.8 -10.13 curveto
-99.8 -10.13 lineto
-99.8 -10.13 -99.8 -10.61 -99.62 -11.18 curveto
-99.62 -11.18 lineto
-108.08 -11.18 lineto
-108.08 -11.18 -107.15 -9.77 -106.61 -7.76 curveto
-106.61 -7.76 lineto
-103.01 6.19 lineto
-103.01 6.19 -102.83 6.91 -102.83 7.75 curveto
-102.83 7.75 lineto
-102.83 7.75 -102.83 8.23 -103.01 8.83 curveto
-103.01 8.83 lineto
-95.15 8.83 lineto
closepath
-75.26 3.52 moveto
-75.26 3.52 lineto
-75.26 3.52 -75.29 2.68 -75.44 1.03 curveto
-75.44 1.03 lineto
-75.44 1.03 -74.66 2.47 -73.8 2.99 curveto
-73.8 2.99 lineto
-73.8 2.99 -72.95 3.52 -71.33 3.52 curveto
-71.33 3.52 lineto
-67.25 3.52 lineto
-68.51 -1.28 lineto
-68.51 -1.28 -69.35 -0.53 -70.97 -0.53 curveto
-70.97 -0.53 lineto
-73.49 -0.53 lineto
-73.49 -0.53 -75.17 -0.53 -75.47 -1.79 curveto
-75.47 -1.79 lineto
-77.24 -8.54 lineto
-77.24 -8.54 -77.42 -9.29 -77.42 -10.13 curveto
-77.42 -10.13 lineto
-77.42 -10.13 -77.42 -10.61 -77.24 -11.18 curveto
-77.24 -11.18 lineto
-85.7 -11.18 lineto
-85.7 -11.18 -84.74 -9.77 -84.23 -7.76 curveto
-84.23 -7.76 lineto
-81.98 0.88 lineto
-81.98 0.88 -81.8 1.6 -81.8 2.47 curveto
-81.8 2.47 lineto
-81.8 2.47 -81.8 2.95 -82.01 3.52 curveto
-82.01 3.52 lineto
-75.26 3.52 lineto
closepath
-61.04 3.52 moveto
-61.04 3.52 lineto
-52.1 3.52 lineto
-52.1 3.52 -50.42 3.52 -49.52 3.01 curveto
-49.52 3.01 lineto
-49.52 3.01 -47.69 1.96 -47.69 -0.29 curveto
-47.69 -0.29 lineto
-47.69 -0.29 -47.69 -1.01 -47.93 -1.97 curveto
-47.93 -1.97 lineto
-49.34 -7.37 lineto
-49.34 -7.37 -49.85 -9.38 -51.02 -10.28 curveto
-51.02 -10.28 lineto
-51.02 -10.28 -52.19 -11.18 -55.22 -11.18 curveto
-55.22 -11.18 lineto
-64.1 -11.18 lineto
-64.1 -11.18 -65.54 -11.18 -65.93 -11.12 curveto
-65.93 -11.12 lineto
-65.93 -11.12 -66.92 -11 -67.58 -10.46 curveto
-67.58 -10.46 lineto
-67.58 -10.46 -68.99 -9.35 -68.99 -7.49 curveto
-68.99 -7.49 lineto
-68.99 -7.49 -68.99 -7.01 -68.78 -6.26 curveto
-68.78 -6.26 lineto
-67.13 0.19 lineto
-67.13 0.19 -66.59 2.29 -64.82 3.01 curveto
-64.82 3.01 lineto
-64.82 3.01 -63.62 3.52 -61.04 3.52 curveto
-61.04 3.52 lineto
closepath
-60.14 -0.62 moveto
-60.14 -0.62 lineto
-61.67 -6.65 lineto
-61.67 -6.65 -61.85 -7.31 -61.85 -7.49 curveto
-61.85 -7.49 lineto
-61.85 -7.49 -61.85 -8.33 -60.44 -8.33 curveto
-60.44 -8.33 lineto
-58.31 -8.33 lineto
-58.31 -8.33 -57.41 -8.33 -57.05 -8.11 curveto
-57.05 -8.11 lineto
-57.05 -8.11 -56.69 -7.88 -56.48 -7.07 curveto
-56.48 -7.07 lineto
-54.98 -1.37 lineto
-54.98 -1.37 -54.8 -0.71 -54.8 -0.35 curveto
-54.8 -0.35 lineto
-54.8 -0.35 -54.8 0.67 -56.3 0.67 curveto
-56.3 0.67 lineto
-58.13 0.67 lineto
-58.13 0.67 -59.09 0.67 -59.45 0.46 curveto
-59.45 0.46 lineto
-59.45 0.46 -59.93 0.19 -60.14 -0.62 curveto
-60.14 -0.62 lineto
closepath
-36.98 3.52 moveto
-36.98 3.52 lineto
-37.34 2.17 lineto
-37.34 2.17 -36.86 3.04 -36.35 3.31 curveto
-36.35 3.31 lineto
-36.35 3.31 -35.93 3.52 -34.88 3.52 curveto
-34.88 3.52 lineto
-30.02 3.52 lineto
-30.02 3.52 -28.22 3.52 -27.06 2.51 curveto
-27.06 2.51 lineto
-27.06 2.51 -25.91 1.51 -25.91 -0.26 curveto
-25.91 -0.26 lineto
-25.91 -0.26 -25.91 -1.25 -26.24 -2.6 curveto
-26.24 -2.6 lineto
-27.8 -8.54 lineto
-27.8 -8.54 -27.98 -9.29 -27.98 -10.13 curveto
-27.98 -10.13 lineto
-27.98 -10.13 -27.98 -10.61 -27.8 -11.18 curveto
-27.8 -11.18 lineto
-36.26 -11.18 lineto
-36.26 -11.18 -35.33 -9.83 -34.79 -7.76 curveto
-34.79 -7.76 lineto
-33.11 -1.25 lineto
-33.11 -1.25 -32.87 -0.29 -32.87 -0.08 curveto
-32.87 -0.08 lineto
-32.87 -0.08 -32.87 0.46 -33.5 0.64 curveto
-33.5 0.64 lineto
-33.5 0.64 -33.68 0.67 -34.28 0.67 curveto
-34.28 0.67 lineto
-35.99 0.67 lineto
-35.99 0.67 -36.86 0.67 -37.2 0.38 curveto
-37.2 0.38 lineto
-37.2 0.38 -37.55 0.1 -37.76 -0.74 curveto
-37.76 -0.74 lineto
-39.8 -8.54 lineto
-39.8 -8.54 -39.98 -9.29 -39.98 -10.13 curveto
-39.98 -10.13 lineto
-39.98 -10.13 -39.98 -10.61 -39.8 -11.18 curveto
-39.8 -11.18 lineto
-48.26 -11.18 lineto
-48.26 -11.18 -47.3 -9.77 -46.79 -7.76 curveto
-46.79 -7.76 lineto
-44.54 0.88 lineto
-44.54 0.88 -44.36 1.6 -44.36 2.47 curveto
-44.36 2.47 lineto
-44.36 2.47 -44.36 2.95 -44.57 3.52 curveto
-44.57 3.52 lineto
-36.98 3.52 lineto
closepath
-12.92 8.83 moveto
-12.92 8.83 lineto
-13.91 4.93 lineto
-21.14 4.93 lineto
-20.12 8.83 lineto
-12.92 8.83 lineto
closepath
-14.3 3.52 moveto
-14.3 3.52 lineto
-17.42 -8.54 lineto
-17.42 -8.54 -17.6 -9.26 -17.6 -10.13 curveto
-17.6 -10.13 lineto
-17.6 -10.13 -17.6 -10.61 -17.42 -11.18 curveto
-17.42 -11.18 lineto
-25.88 -11.18 lineto
-25.88 -11.18 -24.95 -9.83 -24.41 -7.76 curveto
-24.41 -7.76 lineto
-22.16 0.88 lineto
-22.16 0.88 -21.98 1.6 -21.98 2.47 curveto
-21.98 2.47 lineto
-21.98 2.47 -21.98 2.95 -22.19 3.52 curveto
-22.19 3.52 lineto
-14.3 3.52 lineto
closepath
6.4 3.52 moveto
6.4 3.52 lineto
-4.07 -8.33 lineto
1.09 -8.33 lineto
1.09 -8.33 2.5 -8.33 3.97 -7.79 curveto
3.97 -7.79 lineto
2.35 -11.18 lineto
-15.74 -11.18 lineto
-5.18 0.67 lineto
-9.62 0.67 lineto
-9.62 0.67 -11.78 0.67 -13.58 0.04 curveto
-13.58 0.04 lineto
-12.32 3.52 lineto
6.4 3.52 lineto
closepath
8.47 3.52 moveto
8.47 3.52 lineto
21.88 3.52 lineto
21.88 3.52 23.56 3.52 24.49 2.71 curveto
24.49 2.71 lineto
24.49 2.71 25.84 1.57 25.84 -0.17 curveto
25.84 -0.17 lineto
25.84 -0.17 25.84 -0.95 25.54 -2.18 curveto
25.54 -2.18 lineto
23.89 -8.54 lineto
23.89 -8.54 23.71 -9.26 23.71 -10.13 curveto
23.71 -10.13 lineto
23.71 -10.13 23.71 -10.58 23.89 -11.18 curveto
23.89 -11.18 lineto
16.78 -11.18 lineto
16.78 -11.18 16.6 -10.64 16.6 -10.07 curveto
16.6 -10.07 lineto
16.6 -9.74 lineto
16.6 -9.74 15.82 -11.18 13.75 -11.18 curveto
13.75 -11.18 lineto
9.49 -11.18 lineto
9.49 -11.18 7.66 -11.18 6.43 -10.34 curveto
6.43 -10.34 lineto
6.43 -10.34 5.05 -9.35 5.05 -7.58 curveto
5.05 -7.58 lineto
5.05 -7.58 5.05 -7.01 5.26 -6.23 curveto
5.26 -6.23 lineto
5.62 -4.82 lineto
5.62 -4.82 6.13 -2.81 7.24 -2.06 curveto
7.24 -2.06 lineto
7.24 -2.06 8.26 -1.34 10.42 -1.34 curveto
10.42 -1.34 lineto
17.29 -1.34 lineto
17.29 -1.34 18.07 -1.34 18.31 -1.16 curveto
18.31 -1.16 lineto
18.31 -1.16 18.7 -0.83 18.7 -0.14 curveto
18.7 -0.14 lineto
18.7 -0.14 18.7 0.67 17.14 0.67 curveto
17.14 0.67 lineto
10 0.67 lineto
10 0.67 7.87 0.67 6.88 0.1 curveto
6.88 0.1 lineto
8.47 3.52 lineto
closepath
17.77 -4.16 moveto
17.77 -4.16 lineto
14.29 -4.16 lineto
14.29 -4.16 13.42 -4.16 13.14 -4.37 curveto
13.14 -4.37 lineto
13.14 -4.37 12.85 -4.58 12.64 -5.36 curveto
12.64 -5.36 lineto
12.25 -6.83 lineto
12.25 -6.83 12.13 -7.28 12.13 -7.46 curveto
12.13 -7.46 lineto
12.13 -7.46 12.13 -8.33 13.54 -8.33 curveto
13.54 -8.33 lineto
15.31 -8.33 lineto
15.31 -8.33 16.21 -8.33 16.42 -8.21 curveto
16.42 -8.21 lineto
16.42 -8.21 16.75 -8.03 16.96 -7.28 curveto
16.96 -7.28 lineto
17.77 -4.16 lineto
closepath
44.05 3.52 moveto
44.05 3.52 lineto
43.3 0.67 lineto
37.48 0.67 lineto
35.56 -6.77 lineto
35.56 -6.77 35.5 -7.01 35.5 -7.22 curveto
35.5 -7.22 lineto
35.5 -7.22 35.5 -8.33 37.54 -8.33 curveto
37.54 -8.33 lineto
39.46 -8.33 lineto
39.46 -8.33 40.78 -8.33 41.95 -7.88 curveto
41.95 -7.88 lineto
41.11 -11.18 lineto
33.79 -11.18 lineto
33.79 -11.18 30.91 -11.18 29.95 -10.55 curveto
29.95 -10.55 lineto
29.95 -10.55 28.3 -9.44 28.3 -7.52 curveto
28.3 -7.52 lineto
28.3 -7.52 28.3 -7.01 28.48 -6.32 curveto
28.48 -6.32 lineto
30.28 0.67 lineto
27.25 0.67 lineto
28 3.52 lineto
31.03 3.52 lineto
31.75 6.31 lineto
39.07 6.76 lineto
38.23 3.52 lineto
44.05 3.52 lineto
closepath
54.82 8.83 moveto
54.82 8.83 lineto
53.83 4.93 lineto
46.6 4.93 lineto
47.62 8.83 lineto
54.82 8.83 lineto
closepath
53.44 3.52 moveto
53.44 3.52 lineto
50.32 -8.54 lineto
50.32 -8.54 50.14 -9.26 50.14 -10.13 curveto
50.14 -10.13 lineto
50.14 -10.13 50.14 -10.61 50.32 -11.18 curveto
50.32 -11.18 lineto
41.86 -11.18 lineto
41.86 -11.18 42.79 -9.83 43.33 -7.76 curveto
43.33 -7.76 lineto
45.58 0.88 lineto
45.58 0.88 45.76 1.6 45.76 2.47 curveto
45.76 2.47 lineto
45.76 2.47 45.76 2.95 45.55 3.52 curveto
45.55 3.52 lineto
53.44 3.52 lineto
closepath
61.33 3.52 moveto
61.33 3.52 lineto
70.27 3.52 lineto
70.27 3.52 71.95 3.52 72.85 3.01 curveto
72.85 3.01 lineto
72.85 3.01 74.68 1.96 74.68 -0.29 curveto
74.68 -0.29 lineto
74.68 -0.29 74.68 -1.01 74.44 -1.97 curveto
74.44 -1.97 lineto
73.03 -7.37 lineto
73.03 -7.37 72.52 -9.38 71.35 -10.28 curveto
71.35 -10.28 lineto
71.35 -10.28 70.18 -11.18 67.15 -11.18 curveto
67.15 -11.18 lineto
58.27 -11.18 lineto
58.27 -11.18 56.83 -11.18 56.44 -11.12 curveto
56.44 -11.12 lineto
56.44 -11.12 55.45 -11 54.79 -10.46 curveto
54.79 -10.46 lineto
54.79 -10.46 53.38 -9.35 53.38 -7.49 curveto
53.38 -7.49 lineto
53.38 -7.49 53.38 -7.01 53.59 -6.26 curveto
53.59 -6.26 lineto
55.24 0.19 lineto
55.24 0.19 55.78 2.29 57.55 3.01 curveto
57.55 3.01 lineto
57.55 3.01 58.75 3.52 61.33 3.52 curveto
61.33 3.52 lineto
closepath
62.23 -0.62 moveto
62.23 -0.62 lineto
60.7 -6.65 lineto
60.7 -6.65 60.52 -7.31 60.52 -7.49 curveto
60.52 -7.49 lineto
60.52 -7.49 60.52 -8.33 61.93 -8.33 curveto
61.93 -8.33 lineto
64.06 -8.33 lineto
64.06 -8.33 64.96 -8.33 65.32 -8.11 curveto
65.32 -8.11 lineto
65.32 -8.11 65.68 -7.88 65.89 -7.07 curveto
65.89 -7.07 lineto
67.39 -1.37 lineto
67.39 -1.37 67.57 -0.71 67.57 -0.35 curveto
67.57 -0.35 lineto
67.57 -0.35 67.57 0.67 66.07 0.67 curveto
66.07 0.67 lineto
64.24 0.67 lineto
64.24 0.67 63.28 0.67 62.92 0.46 curveto
62.92 0.46 lineto
62.92 0.46 62.44 0.19 62.23 -0.62 curveto
62.23 -0.62 lineto
closepath
85.39 3.52 moveto
85.39 3.52 lineto
85.03 2.17 lineto
85.03 2.17 85.51 3.04 86.02 3.31 curveto
86.02 3.31 lineto
86.02 3.31 86.44 3.52 87.49 3.52 curveto
87.49 3.52 lineto
92.35 3.52 lineto
92.35 3.52 94.15 3.52 95.31 2.51 curveto
95.31 2.51 lineto
95.31 2.51 96.46 1.51 96.46 -0.26 curveto
96.46 -0.26 lineto
96.46 -0.26 96.46 -1.25 96.13 -2.6 curveto
96.13 -2.6 lineto
94.57 -8.54 lineto
94.57 -8.54 94.39 -9.29 94.39 -10.13 curveto
94.39 -10.13 lineto
94.39 -10.13 94.39 -10.61 94.57 -11.18 curveto
94.57 -11.18 lineto
86.11 -11.18 lineto
86.11 -11.18 87.04 -9.83 87.58 -7.76 curveto
87.58 -7.76 lineto
89.26 -1.25 lineto
89.26 -1.25 89.5 -0.29 89.5 -0.08 curveto
89.5 -0.08 lineto
89.5 -0.08 89.5 0.46 88.87 0.64 curveto
88.87 0.64 lineto
88.87 0.64 88.69 0.67 88.09 0.67 curveto
88.09 0.67 lineto
86.38 0.67 lineto
86.38 0.67 85.51 0.67 85.17 0.38 curveto
85.17 0.38 lineto
85.17 0.38 84.82 0.1 84.61 -0.74 curveto
84.61 -0.74 lineto
82.57 -8.54 lineto
82.57 -8.54 82.39 -9.29 82.39 -10.13 curveto
82.39 -10.13 lineto
82.39 -10.13 82.39 -10.61 82.57 -11.18 curveto
82.57 -11.18 lineto
74.11 -11.18 lineto
74.11 -11.18 75.07 -9.77 75.58 -7.76 curveto
75.58 -7.76 lineto
77.83 0.88 lineto
77.83 0.88 78.01 1.6 78.01 2.47 curveto
78.01 2.47 lineto
78.01 2.47 78.01 2.95 77.8 3.52 curveto
77.8 3.52 lineto
85.39 3.52 lineto
closepath
126.7 8.83 moveto
126.7 8.83 lineto
126.28 4.93 lineto
126.28 4.93 124.96 5.53 123.58 5.53 curveto
123.58 5.53 lineto
118.27 5.53 lineto
118.27 5.53 117.04 5.53 116.68 5.32 curveto
116.68 5.32 lineto
116.68 5.32 116.14 5.05 115.87 4 curveto
115.87 4 lineto
113.26 -6.05 lineto
113.26 -6.05 113.08 -6.74 113.08 -6.95 curveto
113.08 -6.95 lineto
113.08 -6.95 113.08 -7.61 113.77 -7.79 curveto
113.77 -7.79 lineto
113.77 -7.79 114.1 -7.88 115.03 -7.88 curveto
115.03 -7.88 lineto
120.13 -7.88 lineto
120.13 -7.88 122.05 -7.88 123.22 -7.19 curveto
123.22 -7.19 lineto
121.6 -11.18 lineto
111.28 -11.18 lineto
111.28 -11.18 108.28 -11.18 107.35 -10.79 curveto
107.35 -10.79 lineto
107.35 -10.79 105.31 -9.89 105.31 -7.64 curveto
105.31 -7.64 lineto
105.31 -7.64 105.31 -7.07 105.61 -5.81 curveto
105.61 -5.81 lineto
108.34 4.72 lineto
108.34 4.72 108.97 7.12 110.77 8.08 curveto
110.77 8.08 lineto
110.77 8.08 111.76 8.62 113.02 8.74 curveto
113.02 8.74 lineto
113.02 8.74 113.59 8.83 115.39 8.83 curveto
115.39 8.83 lineto
126.7 8.83 lineto
closepath
132.91 3.52 moveto
132.91 3.52 lineto
141.85 3.52 lineto
141.85 3.52 143.53 3.52 144.43 3.01 curveto
144.43 3.01 lineto
144.43 3.01 146.26 1.96 146.26 -0.29 curveto
146.26 -0.29 lineto
146.26 -0.29 146.26 -1.01 146.02 -1.97 curveto
146.02 -1.97 lineto
144.61 -7.37 lineto
144.61 -7.37 144.1 -9.38 142.93 -10.28 curveto
142.93 -10.28 lineto
142.93 -10.28 141.76 -11.18 138.73 -11.18 curveto
138.73 -11.18 lineto
129.85 -11.18 lineto
129.85 -11.18 128.41 -11.18 128.02 -11.12 curveto
128.02 -11.12 lineto
128.02 -11.12 127.03 -11 126.37 -10.46 curveto
126.37 -10.46 lineto
126.37 -10.46 124.96 -9.35 124.96 -7.49 curveto
124.96 -7.49 lineto
124.96 -7.49 124.96 -7.01 125.17 -6.26 curveto
125.17 -6.26 lineto
126.82 0.19 lineto
126.82 0.19 127.36 2.29 129.13 3.01 curveto
129.13 3.01 lineto
129.13 3.01 130.33 3.52 132.91 3.52 curveto
132.91 3.52 lineto
closepath
133.81 -0.62 moveto
133.81 -0.62 lineto
132.28 -6.65 lineto
132.28 -6.65 132.1 -7.31 132.1 -7.49 curveto
132.1 -7.49 lineto
132.1 -7.49 132.1 -8.33 133.51 -8.33 curveto
133.51 -8.33 lineto
135.64 -8.33 lineto
135.64 -8.33 136.54 -8.33 136.9 -8.11 curveto
136.9 -8.11 lineto
136.9 -8.11 137.26 -7.88 137.47 -7.07 curveto
137.47 -7.07 lineto
138.97 -1.37 lineto
138.97 -1.37 139.15 -0.71 139.15 -0.35 curveto
139.15 -0.35 lineto
139.15 -0.35 139.15 0.67 137.65 0.67 curveto
137.65 0.67 lineto
135.82 0.67 lineto
135.82 0.67 134.86 0.67 134.5 0.46 curveto
134.5 0.46 lineto
134.5 0.46 134.02 0.19 133.81 -0.62 curveto
133.81 -0.62 lineto
closepath
156.97 3.52 moveto
156.97 3.52 lineto
156.61 2.17 lineto
156.61 2.17 157.09 3.04 157.6 3.31 curveto
157.6 3.31 lineto
157.6 3.31 158.02 3.52 159.07 3.52 curveto
159.07 3.52 lineto
163.93 3.52 lineto
163.93 3.52 165.73 3.52 166.89 2.51 curveto
166.89 2.51 lineto
166.89 2.51 168.04 1.51 168.04 -0.26 curveto
168.04 -0.26 lineto
168.04 -0.26 168.04 -1.25 167.71 -2.6 curveto
167.71 -2.6 lineto
166.15 -8.54 lineto
166.15 -8.54 165.97 -9.29 165.97 -10.13 curveto
165.97 -10.13 lineto
165.97 -10.13 165.97 -10.61 166.15 -11.18 curveto
166.15 -11.18 lineto
157.69 -11.18 lineto
157.69 -11.18 158.62 -9.83 159.16 -7.76 curveto
159.16 -7.76 lineto
160.84 -1.25 lineto
160.84 -1.25 161.08 -0.29 161.08 -0.08 curveto
161.08 -0.08 lineto
161.08 -0.08 161.08 0.46 160.45 0.64 curveto
160.45 0.64 lineto
160.45 0.64 160.27 0.67 159.67 0.67 curveto
159.67 0.67 lineto
157.96 0.67 lineto
157.96 0.67 157.09 0.67 156.75 0.38 curveto
156.75 0.38 lineto
156.75 0.38 156.4 0.1 156.19 -0.74 curveto
156.19 -0.74 lineto
154.15 -8.54 lineto
154.15 -8.54 153.97 -9.29 153.97 -10.13 curveto
153.97 -10.13 lineto
153.97 -10.13 153.97 -10.61 154.15 -11.18 curveto
154.15 -11.18 lineto
145.69 -11.18 lineto
145.69 -11.18 146.65 -9.77 147.16 -7.76 curveto
147.16 -7.76 lineto
149.41 0.88 lineto
149.41 0.88 149.59 1.6 149.59 2.47 curveto
149.59 2.47 lineto
149.59 2.47 149.59 2.95 149.38 3.52 curveto
149.38 3.52 lineto
156.97 3.52 lineto
closepath
179.35 3.52 moveto
179.35 3.52 lineto
178.99 2.17 lineto
178.99 2.17 179.47 3.04 179.98 3.31 curveto
179.98 3.31 lineto
179.98 3.31 180.4 3.52 181.45 3.52 curveto
181.45 3.52 lineto
186.31 3.52 lineto
186.31 3.52 188.11 3.52 189.27 2.51 curveto
189.27 2.51 lineto
189.27 2.51 190.42 1.51 190.42 -0.26 curveto
190.42 -0.26 lineto
190.42 -0.26 190.42 -1.25 190.09 -2.6 curveto
190.09 -2.6 lineto
188.53 -8.54 lineto
188.53 -8.54 188.35 -9.29 188.35 -10.13 curveto
188.35 -10.13 lineto
188.35 -10.13 188.35 -10.61 188.53 -11.18 curveto
188.53 -11.18 lineto
180.07 -11.18 lineto
180.07 -11.18 181 -9.83 181.54 -7.76 curveto
181.54 -7.76 lineto
183.22 -1.25 lineto
183.22 -1.25 183.46 -0.29 183.46 -0.08 curveto
183.46 -0.08 lineto
183.46 -0.08 183.46 0.46 182.83 0.64 curveto
182.83 0.64 lineto
182.83 0.64 182.65 0.67 182.05 0.67 curveto
182.05 0.67 lineto
180.34 0.67 lineto
180.34 0.67 179.47 0.67 179.13 0.38 curveto
179.13 0.38 lineto
179.13 0.38 178.78 0.1 178.57 -0.74 curveto
178.57 -0.74 lineto
176.53 -8.54 lineto
176.53 -8.54 176.35 -9.29 176.35 -10.13 curveto
176.35 -10.13 lineto
176.35 -10.13 176.35 -10.61 176.53 -11.18 curveto
176.53 -11.18 lineto
168.07 -11.18 lineto
168.07 -11.18 169.03 -9.77 169.54 -7.76 curveto
169.54 -7.76 lineto
171.79 0.88 lineto
171.79 0.88 171.97 1.6 171.97 2.47 curveto
171.97 2.47 lineto
171.97 2.47 171.97 2.95 171.76 3.52 curveto
171.76 3.52 lineto
179.35 3.52 lineto
closepath
210.22 -8.03 moveto
210.22 -8.03 lineto
208.93 -11.18 lineto
196.12 -11.18 lineto
196.12 -11.18 194.2 -11.18 192.94 -10.31 curveto
192.94 -10.31 lineto
192.94 -10.31 191.5 -9.32 191.5 -7.46 curveto
191.5 -7.46 lineto
191.5 -7.46 191.5 -6.92 191.65 -6.29 curveto
191.65 -6.29 lineto
193.33 0.19 lineto
193.33 0.19 194.2 3.52 198.01 3.52 curveto
198.01 3.52 lineto
207.19 3.52 lineto
207.19 3.52 210.01 3.52 211.09 2.59 curveto
211.09 2.59 lineto
211.09 2.59 212.29 1.51 212.29 -0.14 curveto
212.29 -0.14 lineto
212.29 -0.14 212.29 -0.86 212.11 -1.61 curveto
212.11 -1.61 lineto
211.18 -5.27 lineto
199.09 -5.27 lineto
198.73 -6.62 lineto
198.73 -6.62 198.61 -7.13 198.61 -7.43 curveto
198.61 -7.43 lineto
198.61 -7.43 198.61 -8.06 199.21 -8.21 curveto
199.21 -8.21 lineto
199.21 -8.21 199.57 -8.33 200.53 -8.33 curveto
200.53 -8.33 lineto
207.61 -8.33 lineto
207.61 -8.33 209.32 -8.33 210.22 -8.03 curveto
210.22 -8.03 lineto
closepath
199.84 -2.42 moveto
199.84 -2.42 lineto
204.7 -2.42 lineto
205.12 -0.74 lineto
205.12 -0.74 205.24 -0.32 205.24 -0.08 curveto
205.24 -0.08 lineto
205.24 -0.08 205.24 0.67 204.19 0.67 curveto
204.19 0.67 lineto
201.91 0.67 lineto
201.91 0.67 201.07 0.67 200.77 0.4 curveto
200.77 0.4 lineto
200.77 0.4 200.47 0.13 200.26 -0.74 curveto
200.26 -0.74 lineto
199.84 -2.42 lineto
closepath
230.77 0.19 moveto
230.77 0.19 lineto
230.77 0.19 230.05 0.67 228.46 0.67 curveto
228.46 0.67 lineto
223.51 0.67 lineto
223.51 0.67 222.55 0.67 222.15 0.38 curveto
222.15 0.38 lineto
222.15 0.38 221.74 0.1 221.5 -0.83 curveto
221.5 -0.83 lineto
220.03 -6.59 lineto
220.03 -6.59 219.88 -7.16 219.88 -7.37 curveto
219.88 -7.37 lineto
219.88 -7.37 219.88 -8.33 221.89 -8.33 curveto
221.89 -8.33 lineto
226.06 -8.33 lineto
226.06 -8.33 227.77 -8.33 228.64 -7.97 curveto
228.64 -7.97 lineto
227.32 -11.18 lineto
217.54 -11.18 lineto
217.54 -11.18 215.08 -11.18 214.03 -10.34 curveto
214.03 -10.34 lineto
214.03 -10.34 212.68 -9.26 212.68 -7.7 curveto
212.68 -7.7 lineto
212.68 -7.7 212.68 -7.1 212.95 -6.05 curveto
212.95 -6.05 lineto
214.54 0.07 lineto
214.54 0.07 215.05 2.08 216.4 2.89 curveto
216.4 2.89 lineto
216.4 2.89 217.45 3.52 219.94 3.52 curveto
219.94 3.52 lineto
231.16 3.52 lineto
230.77 0.19 lineto
closepath
247.66 3.52 moveto
247.66 3.52 lineto
246.91 0.67 lineto
241.09 0.67 lineto
239.17 -6.77 lineto
239.17 -6.77 239.11 -7.01 239.11 -7.22 curveto
239.11 -7.22 lineto
239.11 -7.22 239.11 -8.33 241.15 -8.33 curveto
241.15 -8.33 lineto
243.07 -8.33 lineto
243.07 -8.33 244.39 -8.33 245.56 -7.88 curveto
245.56 -7.88 lineto
244.72 -11.18 lineto
237.4 -11.18 lineto
237.4 -11.18 234.52 -11.18 233.56 -10.55 curveto
233.56 -10.55 lineto
233.56 -10.55 231.91 -9.44 231.91 -7.52 curveto
231.91 -7.52 lineto
231.91 -7.52 231.91 -7.01 232.09 -6.32 curveto
232.09 -6.32 lineto
233.89 0.67 lineto
230.86 0.67 lineto
231.61 3.52 lineto
234.64 3.52 lineto
235.36 6.31 lineto
242.68 6.76 lineto
241.84 3.52 lineto
247.66 3.52 lineto
closepath
254.44 3.52 moveto
254.44 3.52 lineto
263.38 3.52 lineto
263.38 3.52 265.06 3.52 265.96 3.01 curveto
265.96 3.01 lineto
265.96 3.01 267.79 1.96 267.79 -0.29 curveto
267.79 -0.29 lineto
267.79 -0.29 267.79 -1.01 267.55 -1.97 curveto
267.55 -1.97 lineto
266.14 -7.37 lineto
266.14 -7.37 265.63 -9.38 264.46 -10.28 curveto
264.46 -10.28 lineto
264.46 -10.28 263.29 -11.18 260.26 -11.18 curveto
260.26 -11.18 lineto
251.38 -11.18 lineto
251.38 -11.18 249.94 -11.18 249.55 -11.12 curveto
249.55 -11.12 lineto
249.55 -11.12 248.56 -11 247.9 -10.46 curveto
247.9 -10.46 lineto
247.9 -10.46 246.49 -9.35 246.49 -7.49 curveto
246.49 -7.49 lineto
246.49 -7.49 246.49 -7.01 246.7 -6.26 curveto
246.7 -6.26 lineto
248.35 0.19 lineto
248.35 0.19 248.89 2.29 250.66 3.01 curveto
250.66 3.01 lineto
250.66 3.01 251.86 3.52 254.44 3.52 curveto
254.44 3.52 lineto
closepath
255.34 -0.62 moveto
255.34 -0.62 lineto
253.81 -6.65 lineto
253.81 -6.65 253.63 -7.31 253.63 -7.49 curveto
253.63 -7.49 lineto
253.63 -7.49 253.63 -8.33 255.04 -8.33 curveto
255.04 -8.33 lineto
257.17 -8.33 lineto
257.17 -8.33 258.07 -8.33 258.43 -8.11 curveto
258.43 -8.11 lineto
258.43 -8.11 258.79 -7.88 259 -7.07 curveto
259 -7.07 lineto
260.5 -1.37 lineto
260.5 -1.37 260.68 -0.71 260.68 -0.35 curveto
260.68 -0.35 lineto
260.68 -0.35 260.68 0.67 259.18 0.67 curveto
259.18 0.67 lineto
257.35 0.67 lineto
257.35 0.67 256.39 0.67 256.03 0.46 curveto
256.03 0.46 lineto
256.03 0.46 255.55 0.19 255.34 -0.62 curveto
255.34 -0.62 lineto
closepath
277.66 3.52 moveto
277.66 3.52 lineto
277.66 3.52 277.63 2.68 277.48 1.03 curveto
277.48 1.03 lineto
277.48 1.03 278.26 2.47 279.12 2.99 curveto
279.12 2.99 lineto
279.12 2.99 279.97 3.52 281.59 3.52 curveto
281.59 3.52 lineto
285.67 3.52 lineto
284.41 -1.28 lineto
284.41 -1.28 283.57 -0.53 281.95 -0.53 curveto
281.95 -0.53 lineto
279.43 -0.53 lineto
279.43 -0.53 277.75 -0.53 277.45 -1.79 curveto
277.45 -1.79 lineto
275.68 -8.54 lineto
275.68 -8.54 275.5 -9.29 275.5 -10.13 curveto
275.5 -10.13 lineto
275.5 -10.13 275.5 -10.61 275.68 -11.18 curveto
275.68 -11.18 lineto
267.22 -11.18 lineto
267.22 -11.18 268.18 -9.77 268.69 -7.76 curveto
268.69 -7.76 lineto
270.94 0.88 lineto
270.94 0.88 271.12 1.6 271.12 2.47 curveto
271.12 2.47 lineto
271.12 2.47 271.12 2.95 270.91 3.52 curveto
270.91 3.52 lineto
277.66 3.52 lineto
closepath
0 0 0 setrgbcolor

fill

Adobe_AGM_Core/AGMCORE_save get restore



%%PageTrailer
Adobe_AGM_Image/page_trailer get exec
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/doc_trailer get exec
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
