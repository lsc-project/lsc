<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<bindings xmlns="http://java.sun.com/xml/ns/jaxb" if-exists="true" version="2.1">
      
    <!--

Ce fichier a été généré par Eclipse Implementation of JAXB, v2.3.6 
Voir https://eclipse-ee4j.github.io/jaxb-ri 
Toute modification apportée à ce fichier sera perdue lors de la recompilation du schéma source. 
Généré le : 2024.06.27 à 06:47:43 PM CEST 

  -->
      
    <bindings xmlns:tns="http://lsc-project.org/XSD/lsc-core-2.2.xsd" if-exists="true" scd="x-schema::tns">
            
        <schemaBindings map="false">
                  
            <package name="org.lsc.configuration"/>
                
        </schemaBindings>
            
        <bindings if-exists="true" scd="~tns:keysValuesMap">
                  
            <class ref="org.lsc.configuration.KeysValuesMap"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:serviceType">
                  
            <class ref="org.lsc.configuration.ServiceType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:multiDestinationServiceType">
                  
            <class ref="org.lsc.configuration.MultiDestinationServiceType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:pivotTransformationType">
                  
            <class ref="org.lsc.configuration.PivotTransformationType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="tns:lsc">
                  
            <class ref="org.lsc.configuration.Lsc"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:connectionsType">
                  
            <class ref="org.lsc.configuration.ConnectionsType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:tasksType">
                  
            <class ref="org.lsc.configuration.TasksType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:securityType">
                  
            <class ref="org.lsc.configuration.SecurityType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:connectionType">
                  
            <class ref="org.lsc.configuration.ConnectionType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:ldapConnectionType">
                  
            <class ref="org.lsc.configuration.LdapConnectionType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:databaseConnectionType">
                  
            <class ref="org.lsc.configuration.DatabaseConnectionType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:pluginConnectionType">
                  
            <class ref="org.lsc.configuration.PluginConnectionType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:valuesType">
                  
            <class ref="org.lsc.configuration.ValuesType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:encryptionType">
                  
            <class ref="org.lsc.configuration.EncryptionType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:syncOptionsType">
                  
            <class ref="org.lsc.configuration.SyncOptionsType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:forceSyncOptionsType">
                  
            <class ref="org.lsc.configuration.ForceSyncOptionsType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:datasetType">
                  
            <class ref="org.lsc.configuration.DatasetType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:conditionsType">
                  
            <class ref="org.lsc.configuration.ConditionsType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:hooksType">
                  
            <class ref="org.lsc.configuration.HooksType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:propertiesBasedSyncOptionsType">
                  
            <class ref="org.lsc.configuration.PropertiesBasedSyncOptionsType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:pluginSyncOptionsType">
                  
            <class ref="org.lsc.configuration.PluginSyncOptionsType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:ldapServiceType">
                  
            <class ref="org.lsc.configuration.LdapServiceType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:ldapSourceServiceType">
                  
            <class ref="org.lsc.configuration.LdapSourceServiceType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:asyncLdapSourceServiceType">
                  
            <class ref="org.lsc.configuration.AsyncLdapSourceServiceType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:pluginSourceServiceType">
                  
            <class ref="org.lsc.configuration.PluginSourceServiceType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:ldapDestinationServiceType">
                  
            <class ref="org.lsc.configuration.LdapDestinationServiceType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:databaseSourceServiceType">
                  
            <class ref="org.lsc.configuration.DatabaseSourceServiceType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:databaseDestinationServiceType">
                  
            <class ref="org.lsc.configuration.DatabaseDestinationServiceType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:pluginDestinationServiceType">
                  
            <class ref="org.lsc.configuration.PluginDestinationServiceType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:xaFileDestinationServiceType">
                  
            <class ref="org.lsc.configuration.XaFileDestinationServiceType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:taskType">
                  
            <class ref="org.lsc.configuration.TaskType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:ldapAuthenticationType">
                  
            <typesafeEnumClass ref="org.lsc.configuration.LdapAuthenticationType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:ldapReferralType">
                  
            <typesafeEnumClass ref="org.lsc.configuration.LdapReferralType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:ldapDerefAliasesType">
                  
            <typesafeEnumClass ref="org.lsc.configuration.LdapDerefAliasesType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:ldapVersionType">
                  
            <typesafeEnumClass ref="org.lsc.configuration.LdapVersionType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:saslQopType">
                  
            <typesafeEnumClass ref="org.lsc.configuration.SaslQopType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:pivotOriginType">
                  
            <typesafeEnumClass ref="org.lsc.configuration.PivotOriginType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:policyType">
                  
            <typesafeEnumClass ref="org.lsc.configuration.PolicyType"/>
                
        </bindings>
            
        <bindings if-exists="true" scd="~tns:ldapServerType">
                  
            <typesafeEnumClass ref="org.lsc.configuration.LdapServerType"/>
                
        </bindings>
          
    </bindings>
    
</bindings>
